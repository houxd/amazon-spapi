/*
 * Selling Partner API for Pricing
 *
 * The Selling Partner API for Pricing helps you programmatically retrieve product pricing and offer information for Amazon Marketplace products.
 *
 * The version of the OpenAPI document: v0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// OfferType : Schema for an individual offer.
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct OfferType {
    #[serde(rename = "offerType", skip_serializing_if = "Option::is_none")]
    pub offer_type: Option<models::product_pricing_v0::OfferCustomerType>,
    #[serde(rename = "BuyingPrice")]
    pub buying_price: Box<models::product_pricing_v0::PriceType>,
    #[serde(rename = "RegularPrice")]
    pub regular_price: Box<models::product_pricing_v0::MoneyType>,
    #[serde(rename = "businessPrice", skip_serializing_if = "Option::is_none")]
    pub business_price: Option<Box<models::product_pricing_v0::MoneyType>>,
    /// List of `QuantityDiscountPrice` that contains item's pricing information when buy in bulk.
    #[serde(rename = "quantityDiscountPrices", skip_serializing_if = "Option::is_none")]
    pub quantity_discount_prices: Option<Vec<models::product_pricing_v0::QuantityDiscountPriceType>>,
    /// The fulfillment channel for the offer listing. Possible values:  * Amazon - Fulfilled by Amazon. * Merchant - Fulfilled by the seller.
    #[serde(rename = "FulfillmentChannel")]
    pub fulfillment_channel: String,
    /// The item condition for the offer listing. Possible values: New, Used, Collectible, Refurbished, or Club.
    #[serde(rename = "ItemCondition")]
    pub item_condition: String,
    /// The item subcondition for the offer listing. Possible values: New, Mint, Very Good, Good, Acceptable, Poor, Club, OEM, Warranty, Refurbished Warranty, Refurbished, Open Box, or Other.
    #[serde(rename = "ItemSubCondition")]
    pub item_sub_condition: String,
    /// The seller stock keeping unit (SKU) of the item.
    #[serde(rename = "SellerSKU")]
    pub seller_sku: String,
}

impl OfferType {
    /// Schema for an individual offer.
    pub fn new(buying_price: models::product_pricing_v0::PriceType, regular_price: models::product_pricing_v0::MoneyType, fulfillment_channel: String, item_condition: String, item_sub_condition: String, seller_sku: String) -> OfferType {
        OfferType {
            offer_type: None,
            buying_price: Box::new(buying_price),
            regular_price: Box::new(regular_price),
            business_price: None,
            quantity_discount_prices: None,
            fulfillment_channel,
            item_condition,
            item_sub_condition,
            seller_sku,
        }
    }
}

