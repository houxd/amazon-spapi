/*
 * Selling Partner API for Pricing
 *
 * The Selling Partner API for Pricing helps you programmatically retrieve product pricing and offer information for Amazon Marketplace products.
 *
 * The version of the OpenAPI document: v0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// LowestPriceType : Schema for an individual lowest price.
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct LowestPriceType {
    /// Indicates the condition of the item. For example: New, Used, Collectible, Refurbished, or Club.
    #[serde(rename = "condition")]
    pub condition: String,
    /// Indicates whether the item is fulfilled by Amazon or by the seller.
    #[serde(rename = "fulfillmentChannel")]
    pub fulfillment_channel: String,
    #[serde(rename = "offerType", skip_serializing_if = "Option::is_none")]
    pub offer_type: Option<models::product_pricing_v0::OfferCustomerType>,
    /// Indicates at what quantity this price becomes active.
    #[serde(rename = "quantityTier", skip_serializing_if = "Option::is_none")]
    pub quantity_tier: Option<i32>,
    #[serde(rename = "quantityDiscountType", skip_serializing_if = "Option::is_none")]
    pub quantity_discount_type: Option<models::product_pricing_v0::QuantityDiscountType>,
    #[serde(rename = "LandedPrice", skip_serializing_if = "Option::is_none")]
    pub landed_price: Option<Box<models::product_pricing_v0::MoneyType>>,
    #[serde(rename = "ListingPrice")]
    pub listing_price: Box<models::product_pricing_v0::MoneyType>,
    #[serde(rename = "Shipping", skip_serializing_if = "Option::is_none")]
    pub shipping: Option<Box<models::product_pricing_v0::MoneyType>>,
    #[serde(rename = "Points", skip_serializing_if = "Option::is_none")]
    pub points: Option<Box<models::product_pricing_v0::Points>>,
}

impl LowestPriceType {
    /// Schema for an individual lowest price.
    pub fn new(condition: String, fulfillment_channel: String, listing_price: models::product_pricing_v0::MoneyType) -> LowestPriceType {
        LowestPriceType {
            condition,
            fulfillment_channel,
            offer_type: None,
            quantity_tier: None,
            quantity_discount_type: None,
            landed_price: None,
            listing_price: Box::new(listing_price),
            shipping: None,
            points: None,
        }
    }
}

