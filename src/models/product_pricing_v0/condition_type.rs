/*
 * Selling Partner API for Pricing
 *
 * The Selling Partner API for Pricing helps you programmatically retrieve product pricing and offer information for Amazon Marketplace products.
 *
 * The version of the OpenAPI document: v0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// ConditionType : Indicates the condition of the item. Possible values: New, Used, Collectible, Refurbished, Club.
/// Indicates the condition of the item. Possible values: New, Used, Collectible, Refurbished, Club.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum ConditionType {
    #[serde(rename = "New")]
    New,
    #[serde(rename = "Used")]
    Used,
    #[serde(rename = "Collectible")]
    Collectible,
    #[serde(rename = "Refurbished")]
    Refurbished,
    #[serde(rename = "Club")]
    Club,

}

impl std::fmt::Display for ConditionType {
    fn fmt(&self, f: &mut std::fmt::Formatter) -> std::fmt::Result {
        match self {
            Self::New => write!(f, "New"),
            Self::Used => write!(f, "Used"),
            Self::Collectible => write!(f, "Collectible"),
            Self::Refurbished => write!(f, "Refurbished"),
            Self::Club => write!(f, "Club"),
        }
    }
}

impl Default for ConditionType {
    fn default() -> ConditionType {
        Self::New
    }
}

