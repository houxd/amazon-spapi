/*
 * Selling Partner API for Listings Items
 *
 * The Selling Partner API for Listings Items (Listings Items API) provides programmatic access to selling partner listings on Amazon. Use this API in collaboration with the Selling Partner API for Product Type Definitions, which you use to retrieve the information about Amazon product types needed to use the Listings Items API.  For more information, see the [Listing Items API Use Case Guide](doc:listings-items-api-v2020-09-01-use-case-guide).
 *
 * The version of the OpenAPI document: 2020-09-01
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// Issue : An issue with a listings item.
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct Issue {
    /// An issue code that identifies the type of issue.
    #[serde(rename = "code")]
    pub code: String,
    /// A message that describes the issue.
    #[serde(rename = "message")]
    pub message: String,
    /// The severity of the issue.
    #[serde(rename = "severity")]
    pub severity: Severity,
    /// Name of the attribute associated with the issue, if applicable.
    #[serde(rename = "attributeName", skip_serializing_if = "Option::is_none")]
    pub attribute_name: Option<String>,
}

impl Issue {
    /// An issue with a listings item.
    pub fn new(code: String, message: String, severity: Severity) -> Issue {
        Issue {
            code,
            message,
            severity,
            attribute_name: None,
        }
    }
}
/// The severity of the issue.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Severity {
    #[serde(rename = "ERROR")]
    Error,
    #[serde(rename = "WARNING")]
    Warning,
    #[serde(rename = "INFO")]
    Info,
}

impl Default for Severity {
    fn default() -> Severity {
        Self::Error
    }
}

