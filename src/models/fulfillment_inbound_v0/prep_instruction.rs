/*
 * Selling Partner API for Fulfillment Inbound
 *
 * The Selling Partner API for Fulfillment Inbound lets you create applications that create and update inbound shipments of inventory to Amazon's fulfillment network.
 *
 * The version of the OpenAPI document: v0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// PrepInstruction : Preparation instructions for shipping an item to Amazon's fulfillment network. For more information about preparing items for shipment to Amazon's fulfillment network, see the Seller Central Help for your marketplace.
/// Preparation instructions for shipping an item to Amazon's fulfillment network. For more information about preparing items for shipment to Amazon's fulfillment network, see the Seller Central Help for your marketplace.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum PrepInstruction {
    #[serde(rename = "Polybagging")]
    Polybagging,
    #[serde(rename = "BubbleWrapping")]
    BubbleWrapping,
    #[serde(rename = "Taping")]
    Taping,
    #[serde(rename = "BlackShrinkWrapping")]
    BlackShrinkWrapping,
    #[serde(rename = "Labeling")]
    Labeling,
    #[serde(rename = "HangGarment")]
    HangGarment,
    #[serde(rename = "SetCreation")]
    SetCreation,
    #[serde(rename = "Boxing")]
    Boxing,
    #[serde(rename = "RemoveFromHanger")]
    RemoveFromHanger,
    #[serde(rename = "Debundle")]
    Debundle,
    #[serde(rename = "SuffocationStickering")]
    SuffocationStickering,
    #[serde(rename = "CapSealing")]
    CapSealing,
    #[serde(rename = "SetStickering")]
    SetStickering,
    #[serde(rename = "BlankStickering")]
    BlankStickering,
    #[serde(rename = "ShipsInProductPackaging")]
    ShipsInProductPackaging,
    #[serde(rename = "NoPrep")]
    NoPrep,

}

impl std::fmt::Display for PrepInstruction {
    fn fmt(&self, f: &mut std::fmt::Formatter) -> std::fmt::Result {
        match self {
            Self::Polybagging => write!(f, "Polybagging"),
            Self::BubbleWrapping => write!(f, "BubbleWrapping"),
            Self::Taping => write!(f, "Taping"),
            Self::BlackShrinkWrapping => write!(f, "BlackShrinkWrapping"),
            Self::Labeling => write!(f, "Labeling"),
            Self::HangGarment => write!(f, "HangGarment"),
            Self::SetCreation => write!(f, "SetCreation"),
            Self::Boxing => write!(f, "Boxing"),
            Self::RemoveFromHanger => write!(f, "RemoveFromHanger"),
            Self::Debundle => write!(f, "Debundle"),
            Self::SuffocationStickering => write!(f, "SuffocationStickering"),
            Self::CapSealing => write!(f, "CapSealing"),
            Self::SetStickering => write!(f, "SetStickering"),
            Self::BlankStickering => write!(f, "BlankStickering"),
            Self::ShipsInProductPackaging => write!(f, "ShipsInProductPackaging"),
            Self::NoPrep => write!(f, "NoPrep"),
        }
    }
}

impl Default for PrepInstruction {
    fn default() -> PrepInstruction {
        Self::Polybagging
    }
}

