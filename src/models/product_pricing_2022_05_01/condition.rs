/*
 * Selling Partner API for Pricing
 *
 * The Selling Partner API for Pricing helps you programmatically retrieve product pricing and offer pricing information for Amazon Marketplace products.  For more information, refer to the [Product Pricing v2022-05-01 Use Case Guide](https://developer-docs.amazon.com/sp-api/docs/product-pricing-api-v2022-05-01-use-case-guide).
 *
 * The version of the OpenAPI document: 2022-05-01
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// Condition : The condition of the item.
/// The condition of the item.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Condition {
    #[serde(rename = "New")]
    New,
    #[serde(rename = "Used")]
    Used,
    #[serde(rename = "Collectible")]
    Collectible,
    #[serde(rename = "Refurbished")]
    Refurbished,
    #[serde(rename = "Club")]
    Club,

}

impl std::fmt::Display for Condition {
    fn fmt(&self, f: &mut std::fmt::Formatter) -> std::fmt::Result {
        match self {
            Self::New => write!(f, "New"),
            Self::Used => write!(f, "Used"),
            Self::Collectible => write!(f, "Collectible"),
            Self::Refurbished => write!(f, "Refurbished"),
            Self::Club => write!(f, "Club"),
        }
    }
}

impl Default for Condition {
    fn default() -> Condition {
        Self::New
    }
}

