/*
 * Selling Partner API for Pricing
 *
 * The Selling Partner API for Pricing helps you programmatically retrieve product pricing and offer pricing information for Amazon Marketplace products.  For more information, refer to the [Product Pricing v2022-05-01 Use Case Guide](https://developer-docs.amazon.com/sp-api/docs/product-pricing-api-v2022-05-01-use-case-guide).
 *
 * The version of the OpenAPI document: 2022-05-01
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// CompetitiveSummaryIncludedData : The supported data types in the `getCompetitiveSummary` API.
/// The supported data types in the `getCompetitiveSummary` API.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum CompetitiveSummaryIncludedData {
    #[serde(rename = "featuredBuyingOptions")]
    FeaturedBuyingOptions,
    #[serde(rename = "referencePrices")]
    ReferencePrices,
    #[serde(rename = "lowestPricedOffers")]
    LowestPricedOffers,

}

impl std::fmt::Display for CompetitiveSummaryIncludedData {
    fn fmt(&self, f: &mut std::fmt::Formatter) -> std::fmt::Result {
        match self {
            Self::FeaturedBuyingOptions => write!(f, "featuredBuyingOptions"),
            Self::ReferencePrices => write!(f, "referencePrices"),
            Self::LowestPricedOffers => write!(f, "lowestPricedOffers"),
        }
    }
}

impl Default for CompetitiveSummaryIncludedData {
    fn default() -> CompetitiveSummaryIncludedData {
        Self::FeaturedBuyingOptions
    }
}

