/*
 * Selling Partner API for Pricing
 *
 * The Selling Partner API for Pricing helps you programmatically retrieve product pricing and offer pricing information for Amazon Marketplace products.  For more information, refer to the [Product Pricing v2022-05-01 Use Case Guide](https://developer-docs.amazon.com/sp-api/docs/product-pricing-api-v2022-05-01-use-case-guide).
 *
 * The version of the OpenAPI document: 2022-05-01
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// FeaturedBuyingOption : Describes a featured buying option, which includes a list of segmented featured offers for a particular item condition.
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct FeaturedBuyingOption {
    /// The buying option type for the featured offer. `buyingOptionType` represents the buying options that a customer receives on the detail page, such as `B2B`, `Fresh`, and `Subscribe n Save`. `buyingOptionType` currently supports `NEW` as a value.
    #[serde(rename = "buyingOptionType")]
    pub buying_option_type: BuyingOptionType,
    /// A list of segmented featured offers for the current buying option type. A segment can be considered as a group of regional contexts that all have the same featured offer. A regional context is a combination of factors such as customer type, region, or postal code and buying option.
    #[serde(rename = "segmentedFeaturedOffers")]
    pub segmented_featured_offers: Vec<models::product_pricing_2022_05_01::SegmentedFeaturedOffer>,
}

impl FeaturedBuyingOption {
    /// Describes a featured buying option, which includes a list of segmented featured offers for a particular item condition.
    pub fn new(buying_option_type: BuyingOptionType, segmented_featured_offers: Vec<models::product_pricing_2022_05_01::SegmentedFeaturedOffer>) -> FeaturedBuyingOption {
        FeaturedBuyingOption {
            buying_option_type,
            segmented_featured_offers,
        }
    }
}
/// The buying option type for the featured offer. `buyingOptionType` represents the buying options that a customer receives on the detail page, such as `B2B`, `Fresh`, and `Subscribe n Save`. `buyingOptionType` currently supports `NEW` as a value.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum BuyingOptionType {
    #[serde(rename = "New")]
    New,
}

impl Default for BuyingOptionType {
    fn default() -> BuyingOptionType {
        Self::New
    }
}

