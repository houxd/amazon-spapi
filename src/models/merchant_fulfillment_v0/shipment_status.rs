/*
 * Selling Partner API for Merchant Fulfillment
 *
 * With the Selling Partner API for Merchant Fulfillment, you can build applications that sellers can use to purchase shipping for non-Prime and Prime orders using Amazon's Buy Shipping Services.
 *
 * The version of the OpenAPI document: v0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// ShipmentStatus : The shipment status.
/// The shipment status.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum ShipmentStatus {
    #[serde(rename = "Purchased")]
    Purchased,
    #[serde(rename = "RefundPending")]
    RefundPending,
    #[serde(rename = "RefundRejected")]
    RefundRejected,
    #[serde(rename = "RefundApplied")]
    RefundApplied,

}

impl std::fmt::Display for ShipmentStatus {
    fn fmt(&self, f: &mut std::fmt::Formatter) -> std::fmt::Result {
        match self {
            Self::Purchased => write!(f, "Purchased"),
            Self::RefundPending => write!(f, "RefundPending"),
            Self::RefundRejected => write!(f, "RefundRejected"),
            Self::RefundApplied => write!(f, "RefundApplied"),
        }
    }
}

impl Default for ShipmentStatus {
    fn default() -> ShipmentStatus {
        Self::Purchased
    }
}

