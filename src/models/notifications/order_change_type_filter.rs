/*
 * Selling Partner API for Notifications
 *
 * The Selling Partner API for Notifications lets you subscribe to notifications that are relevant to a selling partner's business. Using this API you can create a destination to receive notifications, subscribe to notifications, delete notification subscriptions, and more.  For more information, refer to the [Notifications Use Case Guide](https://developer-docs.amazon.com/sp-api/docs/notifications-api-v1-use-case-guide).
 *
 * The version of the OpenAPI document: v1
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// OrderChangeTypeFilter : An event filter to customize your subscription to send notifications for only the specified `orderChangeType`.
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct OrderChangeTypeFilter {
    /// A list of order change types to subscribe to (for example: `BuyerRequestedChange`). To receive notifications of all change types, do not provide this list.
    #[serde(rename = "orderChangeTypes", skip_serializing_if = "Option::is_none")]
    pub order_change_types: Option<Vec<models::notifications::OrderChangeTypeEnum>>,
}

impl OrderChangeTypeFilter {
    /// An event filter to customize your subscription to send notifications for only the specified `orderChangeType`.
    pub fn new() -> OrderChangeTypeFilter {
        OrderChangeTypeFilter {
            order_change_types: None,
        }
    }
}

