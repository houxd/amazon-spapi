/*
 * The Selling Partner API for FBA inbound operations.
 *
 * The Selling Partner API for Fulfillment By Amazon (FBA) Inbound. The FBA Inbound API enables building inbound workflows to create, manage, and send shipments into Amazon's fulfillment network. The API has interoperability with the Send-to-Amazon user interface.
 *
 * The version of the OpenAPI document: 2024-03-20
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// ShipmentDestination : The Amazon fulfillment center address and warehouse ID.
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct ShipmentDestination {
    #[serde(rename = "address", skip_serializing_if = "Option::is_none")]
    pub address: Option<Box<models::fulfillment_inbound_2024_03_20::Address>>,
    /// The type of destination for this shipment. Possible values: `AMAZON_OPTIMIZED`, `AMAZON_WAREHOUSE`.
    #[serde(rename = "destinationType")]
    pub destination_type: String,
    /// The warehouse that the shipment should be sent to. Empty if the destination type is `AMAZON_OPTIMIZED`.
    #[serde(rename = "warehouseId", skip_serializing_if = "Option::is_none")]
    pub warehouse_id: Option<String>,
}

impl ShipmentDestination {
    /// The Amazon fulfillment center address and warehouse ID.
    pub fn new(destination_type: String) -> ShipmentDestination {
        ShipmentDestination {
            address: None,
            destination_type,
            warehouse_id: None,
        }
    }
}

