/*
 * The Selling Partner API for FBA inbound operations.
 *
 * The Selling Partner API for Fulfillment By Amazon (FBA) Inbound. The FBA Inbound API enables building inbound workflows to create, manage, and send shipments into Amazon's fulfillment network. The API has interoperability with the Send-to-Amazon user interface.
 *
 * The version of the OpenAPI document: 2024-03-20
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// PrepCategory : The preparation category for shipping an item to Amazon's fulfillment network.
/// The preparation category for shipping an item to Amazon's fulfillment network.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum PrepCategory {
    #[serde(rename = "ADULT")]
    Adult,
    #[serde(rename = "BABY")]
    Baby,
    #[serde(rename = "FC_PROVIDED")]
    FcProvided,
    #[serde(rename = "FRAGILE")]
    Fragile,
    #[serde(rename = "GRANULAR")]
    Granular,
    #[serde(rename = "HANGER")]
    Hanger,
    #[serde(rename = "LIQUID")]
    Liquid,
    #[serde(rename = "PERFORATED")]
    Perforated,
    #[serde(rename = "SET")]
    Set,
    #[serde(rename = "SHARP")]
    Sharp,
    #[serde(rename = "SMALL")]
    Small,
    #[serde(rename = "TEXTILE")]
    Textile,
    #[serde(rename = "UNKNOWN")]
    Unknown,
    #[serde(rename = "NONE")]
    None,

}

impl std::fmt::Display for PrepCategory {
    fn fmt(&self, f: &mut std::fmt::Formatter) -> std::fmt::Result {
        match self {
            Self::Adult => write!(f, "ADULT"),
            Self::Baby => write!(f, "BABY"),
            Self::FcProvided => write!(f, "FC_PROVIDED"),
            Self::Fragile => write!(f, "FRAGILE"),
            Self::Granular => write!(f, "GRANULAR"),
            Self::Hanger => write!(f, "HANGER"),
            Self::Liquid => write!(f, "LIQUID"),
            Self::Perforated => write!(f, "PERFORATED"),
            Self::Set => write!(f, "SET"),
            Self::Sharp => write!(f, "SHARP"),
            Self::Small => write!(f, "SMALL"),
            Self::Textile => write!(f, "TEXTILE"),
            Self::Unknown => write!(f, "UNKNOWN"),
            Self::None => write!(f, "NONE"),
        }
    }
}

impl Default for PrepCategory {
    fn default() -> PrepCategory {
        Self::Adult
    }
}

