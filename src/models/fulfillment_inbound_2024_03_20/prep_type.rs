/*
 * The Selling Partner API for FBA inbound operations.
 *
 * The Selling Partner API for Fulfillment By Amazon (FBA) Inbound. The FBA Inbound API enables building inbound workflows to create, manage, and send shipments into Amazon's fulfillment network. The API has interoperability with the Send-to-Amazon user interface.
 *
 * The version of the OpenAPI document: 2024-03-20
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// PrepType : Preparation instructions for shipping an item to Amazon's fulfillment network. For more information about preparing items for shipment to Amazon's fulfillment network, refer to [Seller Central Help for your marketplace](https://developer-docs.amazon.com/sp-api/docs/seller-central-urls).
/// Preparation instructions for shipping an item to Amazon's fulfillment network. For more information about preparing items for shipment to Amazon's fulfillment network, refer to [Seller Central Help for your marketplace](https://developer-docs.amazon.com/sp-api/docs/seller-central-urls).
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum PrepType {
    #[serde(rename = "ITEM_BLACK_SHRINKWRAP")]
    ItemBlackShrinkwrap,
    #[serde(rename = "ITEM_BLANKSTK")]
    ItemBlankstk,
    #[serde(rename = "ITEM_BOXING")]
    ItemBoxing,
    #[serde(rename = "ITEM_BUBBLEWRAP")]
    ItemBubblewrap,
    #[serde(rename = "ITEM_CAP_SEALING")]
    ItemCapSealing,
    #[serde(rename = "ITEM_DEBUNDLE")]
    ItemDebundle,
    #[serde(rename = "ITEM_HANG_GARMENT")]
    ItemHangGarment,
    #[serde(rename = "ITEM_LABELING")]
    ItemLabeling,
    #[serde(rename = "ITEM_NO_PREP")]
    ItemNoPrep,
    #[serde(rename = "ITEM_POLYBAGGING")]
    ItemPolybagging,
    #[serde(rename = "ITEM_RMOVHANG")]
    ItemRmovhang,
    #[serde(rename = "ITEM_SETCREAT")]
    ItemSetcreat,
    #[serde(rename = "ITEM_SETSTK")]
    ItemSetstk,
    #[serde(rename = "ITEM_SIOC")]
    ItemSioc,
    #[serde(rename = "ITEM_SUFFOSTK")]
    ItemSuffostk,
    #[serde(rename = "ITEM_TAPING")]
    ItemTaping,

}

impl std::fmt::Display for PrepType {
    fn fmt(&self, f: &mut std::fmt::Formatter) -> std::fmt::Result {
        match self {
            Self::ItemBlackShrinkwrap => write!(f, "ITEM_BLACK_SHRINKWRAP"),
            Self::ItemBlankstk => write!(f, "ITEM_BLANKSTK"),
            Self::ItemBoxing => write!(f, "ITEM_BOXING"),
            Self::ItemBubblewrap => write!(f, "ITEM_BUBBLEWRAP"),
            Self::ItemCapSealing => write!(f, "ITEM_CAP_SEALING"),
            Self::ItemDebundle => write!(f, "ITEM_DEBUNDLE"),
            Self::ItemHangGarment => write!(f, "ITEM_HANG_GARMENT"),
            Self::ItemLabeling => write!(f, "ITEM_LABELING"),
            Self::ItemNoPrep => write!(f, "ITEM_NO_PREP"),
            Self::ItemPolybagging => write!(f, "ITEM_POLYBAGGING"),
            Self::ItemRmovhang => write!(f, "ITEM_RMOVHANG"),
            Self::ItemSetcreat => write!(f, "ITEM_SETCREAT"),
            Self::ItemSetstk => write!(f, "ITEM_SETSTK"),
            Self::ItemSioc => write!(f, "ITEM_SIOC"),
            Self::ItemSuffostk => write!(f, "ITEM_SUFFOSTK"),
            Self::ItemTaping => write!(f, "ITEM_TAPING"),
        }
    }
}

impl Default for PrepType {
    fn default() -> PrepType {
        Self::ItemBlackShrinkwrap
    }
}

