/*
 * The Selling Partner API for FBA inbound operations.
 *
 * The Selling Partner API for Fulfillment By Amazon (FBA) Inbound. The FBA Inbound API enables building inbound workflows to create, manage, and send shipments into Amazon's fulfillment network. The API has interoperability with the Send-to-Amazon user interface.
 *
 * The version of the OpenAPI document: 2024-03-20
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// PackingConfiguration : A way to configure this packing option. Some box content information sources might not be allowed. Non-standard minimum and maximum box weights might be enforced.
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct PackingConfiguration {
    /// The box content information sources that are allowed.
    #[serde(rename = "boxPackingMethods", skip_serializing_if = "Option::is_none")]
    pub box_packing_methods: Option<Vec<models::fulfillment_inbound_2024_03_20::BoxContentInformationSource>>,
    #[serde(rename = "boxRequirements", skip_serializing_if = "Option::is_none")]
    pub box_requirements: Option<Box<models::fulfillment_inbound_2024_03_20::BoxRequirements>>,
    /// A list of supported shipping requirements for this packing configuration.
    #[serde(rename = "shippingRequirements", skip_serializing_if = "Option::is_none")]
    pub shipping_requirements: Option<Vec<models::fulfillment_inbound_2024_03_20::ShippingRequirements>>,
}

impl PackingConfiguration {
    /// A way to configure this packing option. Some box content information sources might not be allowed. Non-standard minimum and maximum box weights might be enforced.
    pub fn new() -> PackingConfiguration {
        PackingConfiguration {
            box_packing_methods: None,
            box_requirements: None,
            shipping_requirements: None,
        }
    }
}

