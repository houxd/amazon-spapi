/*
 * The Selling Partner API for FBA inbound operations.
 *
 * The Selling Partner API for Fulfillment By Amazon (FBA) Inbound. The FBA Inbound API enables building inbound workflows to create, manage, and send shipments into Amazon's fulfillment network. The API has interoperability with the Send-to-Amazon user interface.
 *
 * The version of the OpenAPI document: 2024-03-20
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// BoxUpdateInput : Input information for updating a box
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct BoxUpdateInput {
    #[serde(rename = "contentInformationSource")]
    pub content_information_source: models::fulfillment_inbound_2024_03_20::BoxContentInformationSource,
    #[serde(rename = "dimensions")]
    pub dimensions: Box<models::fulfillment_inbound_2024_03_20::Dimensions>,
    /// The items and their quantity in the box. This must be empty if the box `contentInformationSource` is `BARCODE_2D` or `MANUAL_PROCESS`.
    #[serde(rename = "items", skip_serializing_if = "Option::is_none")]
    pub items: Option<Vec<models::fulfillment_inbound_2024_03_20::ItemInput>>,
    /// Primary key to uniquely identify a Box Package. PackageId must be provided if the intent is to update an existing box. Adding a new box will not require providing this value. Any existing PackageIds not provided will be treated as to-be-removed
    #[serde(rename = "packageId", skip_serializing_if = "Option::is_none")]
    pub package_id: Option<String>,
    /// The number of containers where all other properties like weight or dimensions are identical.
    #[serde(rename = "quantity")]
    pub quantity: i32,
    #[serde(rename = "weight")]
    pub weight: Box<models::fulfillment_inbound_2024_03_20::Weight>,
}

impl BoxUpdateInput {
    /// Input information for updating a box
    pub fn new(content_information_source: models::fulfillment_inbound_2024_03_20::BoxContentInformationSource, dimensions: models::fulfillment_inbound_2024_03_20::Dimensions, quantity: i32, weight: models::fulfillment_inbound_2024_03_20::Weight) -> BoxUpdateInput {
        BoxUpdateInput {
            content_information_source,
            dimensions: Box::new(dimensions),
            items: None,
            package_id: None,
            quantity,
            weight: Box::new(weight),
        }
    }
}

