/*
 * Selling Partner API for Easy Ship
 *
 * Use the Selling Partner API for Easy Ship to build applications for sellers to manage and ship Amazon Easy Ship orders. With this API, you can get available time slots, schedule and reschedule Easy Ship orders, and print shipping labels, invoices, and warranties. To review the differences in Easy Ship operations by marketplace, refer to [Marketplace support](https://developer-docs.amazon.com/sp-api/docs/easyship-api-v2022-03-23-use-case-guide#marketplace-support).
 *
 * The version of the OpenAPI document: 2022-03-23
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// CreateScheduledPackagesResponse : The response schema for the bulk scheduling API. It returns by the bulk scheduling API containing an array of the scheduled packtages, an optional list of orders we couldn't schedule with the reason, and a pre-signed URL for a ZIP file containing the associated shipping labels plus the documents enabled for your marketplace.
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct CreateScheduledPackagesResponse {
    /// A list of packages. Refer to the `Package` object.
    #[serde(rename = "scheduledPackages", skip_serializing_if = "Option::is_none")]
    pub scheduled_packages: Option<Vec<models::easy_ship_2022_03_23::Package>>,
    /// A list of orders we couldn't scheduled on your behalf. Each element contains the reason and details on the error.
    #[serde(rename = "rejectedOrders", skip_serializing_if = "Option::is_none")]
    pub rejected_orders: Option<Vec<models::easy_ship_2022_03_23::RejectedOrder>>,
    /// A pre-signed URL for the zip document containing the shipping labels and the documents enabled for your marketplace.
    #[serde(rename = "printableDocumentsUrl", skip_serializing_if = "Option::is_none")]
    pub printable_documents_url: Option<String>,
}

impl CreateScheduledPackagesResponse {
    /// The response schema for the bulk scheduling API. It returns by the bulk scheduling API containing an array of the scheduled packtages, an optional list of orders we couldn't schedule with the reason, and a pre-signed URL for a ZIP file containing the associated shipping labels plus the documents enabled for your marketplace.
    pub fn new() -> CreateScheduledPackagesResponse {
        CreateScheduledPackagesResponse {
            scheduled_packages: None,
            rejected_orders: None,
            printable_documents_url: None,
        }
    }
}

