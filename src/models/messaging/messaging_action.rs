/*
 * Selling Partner API for Messaging
 *
 * With the Messaging API you can build applications that send messages to buyers. You can get a list of message types that are available for an order that you specify, then call an operation that sends a message to the buyer for that order. The Messaging API returns responses that are formed according to the <a href=https://tools.ietf.org/html/draft-kelly-json-hal-08>JSON Hypertext Application Language</a> (HAL) standard.
 *
 * The version of the OpenAPI document: v1
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// MessagingAction : A simple object containing the name of the template.
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct MessagingAction {
    /// The name of the template.
    #[serde(rename = "name")]
    pub name: String,
}

impl MessagingAction {
    /// A simple object containing the name of the template.
    pub fn new(name: String) -> MessagingAction {
        MessagingAction {
            name,
        }
    }
}

