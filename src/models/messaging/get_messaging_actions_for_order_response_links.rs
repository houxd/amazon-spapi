/*
 * Selling Partner API for Messaging
 *
 * With the Messaging API you can build applications that send messages to buyers. You can get a list of message types that are available for an order that you specify, then call an operation that sends a message to the buyer for that order. The Messaging API returns responses that are formed according to the <a href=https://tools.ietf.org/html/draft-kelly-json-hal-08>JSON Hypertext Application Language</a> (HAL) standard.
 *
 * The version of the OpenAPI document: v1
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// GetMessagingActionsForOrderResponseLinks : The links response that is associated with the specified `amazonOrderId`.
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct GetMessagingActionsForOrderResponseLinks {
    #[serde(rename = "self")]
    pub param_self: Box<models::messaging::LinkObject>,
    /// Eligible actions for the specified amazonOrderId.
    #[serde(rename = "actions")]
    pub actions: Vec<models::messaging::LinkObject>,
}

impl GetMessagingActionsForOrderResponseLinks {
    /// The links response that is associated with the specified `amazonOrderId`.
    pub fn new(param_self: models::messaging::LinkObject, actions: Vec<models::messaging::LinkObject>) -> GetMessagingActionsForOrderResponseLinks {
        GetMessagingActionsForOrderResponseLinks {
            param_self: Box::new(param_self),
            actions,
        }
    }
}

