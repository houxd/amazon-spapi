/*
 * Selling Partner API for Direct Fulfillment Shipping
 *
 * Use the Selling Partner API for Direct Fulfillment Shipping to access a direct fulfillment vendor's shipping data.
 *
 * The version of the OpenAPI document: 2021-12-28
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// CreateContainerLabelRequest : The request body schema for the `createContainerLabel` operation.
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct CreateContainerLabelRequest {
    #[serde(rename = "sellingParty")]
    pub selling_party: Box<models::vendor_direct_fulfillment_shipping_2021_12_28::PartyIdentification>,
    #[serde(rename = "shipFromParty")]
    pub ship_from_party: Box<models::vendor_direct_fulfillment_shipping_2021_12_28::PartyIdentification>,
    #[serde(rename = "carrierId")]
    pub carrier_id: models::vendor_direct_fulfillment_shipping_2021_12_28::CarrierId,
    /// The unique, vendor-provided identifier for the container.
    #[serde(rename = "vendorContainerId")]
    pub vendor_container_id: String,
    /// An array of package objects in a container.
    #[serde(rename = "packages")]
    pub packages: Vec<models::vendor_direct_fulfillment_shipping_2021_12_28::Package>,
}

impl CreateContainerLabelRequest {
    /// The request body schema for the `createContainerLabel` operation.
    pub fn new(selling_party: models::vendor_direct_fulfillment_shipping_2021_12_28::PartyIdentification, ship_from_party: models::vendor_direct_fulfillment_shipping_2021_12_28::PartyIdentification, carrier_id: models::vendor_direct_fulfillment_shipping_2021_12_28::CarrierId, vendor_container_id: String, packages: Vec<models::vendor_direct_fulfillment_shipping_2021_12_28::Package>) -> CreateContainerLabelRequest {
        CreateContainerLabelRequest {
            selling_party: Box::new(selling_party),
            ship_from_party: Box::new(ship_from_party),
            carrier_id,
            vendor_container_id,
            packages,
        }
    }
}

