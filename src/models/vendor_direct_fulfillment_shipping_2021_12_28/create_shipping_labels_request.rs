/*
 * Selling Partner API for Direct Fulfillment Shipping
 *
 * Use the Selling Partner API for Direct Fulfillment Shipping to access a direct fulfillment vendor's shipping data.
 *
 * The version of the OpenAPI document: 2021-12-28
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// CreateShippingLabelsRequest : The request body for the createShippingLabels operation.
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct CreateShippingLabelsRequest {
    #[serde(rename = "sellingParty")]
    pub selling_party: Box<models::vendor_direct_fulfillment_shipping_2021_12_28::PartyIdentification>,
    #[serde(rename = "shipFromParty")]
    pub ship_from_party: Box<models::vendor_direct_fulfillment_shipping_2021_12_28::PartyIdentification>,
    /// A list of the packages in this shipment.
    #[serde(rename = "containers", skip_serializing_if = "Option::is_none")]
    pub containers: Option<Vec<models::vendor_direct_fulfillment_shipping_2021_12_28::Container>>,
}

impl CreateShippingLabelsRequest {
    /// The request body for the createShippingLabels operation.
    pub fn new(selling_party: models::vendor_direct_fulfillment_shipping_2021_12_28::PartyIdentification, ship_from_party: models::vendor_direct_fulfillment_shipping_2021_12_28::PartyIdentification) -> CreateShippingLabelsRequest {
        CreateShippingLabelsRequest {
            selling_party: Box::new(selling_party),
            ship_from_party: Box::new(ship_from_party),
            containers: None,
        }
    }
}

