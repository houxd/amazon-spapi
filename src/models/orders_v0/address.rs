/*
 * Selling Partner API for Orders
 *
 * Use the Orders Selling Partner API to programmatically retrieve order information. With this API, you can develop fast, flexible, and custom applications to manage order synchronization, perform order research, and create demand-based decision support tools.   _Note:_ For the JP, AU, and SG marketplaces, the Orders API supports orders from 2016 onward. For all other marketplaces, the Orders API supports orders for the last two years (orders older than this don't show up in the response).
 *
 * The version of the OpenAPI document: v0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// Address : The shipping address for the order.
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct Address {
    /// The name.
    #[serde(rename = "Name")]
    pub name: String,
    /// The company name of the recipient.  **Note**: This attribute is only available for shipping address.
    #[serde(rename = "CompanyName", skip_serializing_if = "Option::is_none")]
    pub company_name: Option<String>,
    /// The street address.
    #[serde(rename = "AddressLine1", skip_serializing_if = "Option::is_none")]
    pub address_line1: Option<String>,
    /// Additional street address information, if required.
    #[serde(rename = "AddressLine2", skip_serializing_if = "Option::is_none")]
    pub address_line2: Option<String>,
    /// Additional street address information, if required.
    #[serde(rename = "AddressLine3", skip_serializing_if = "Option::is_none")]
    pub address_line3: Option<String>,
    /// The city.
    #[serde(rename = "City", skip_serializing_if = "Option::is_none")]
    pub city: Option<String>,
    /// The county.
    #[serde(rename = "County", skip_serializing_if = "Option::is_none")]
    pub county: Option<String>,
    /// The district.
    #[serde(rename = "District", skip_serializing_if = "Option::is_none")]
    pub district: Option<String>,
    /// The state or region.
    #[serde(rename = "StateOrRegion", skip_serializing_if = "Option::is_none")]
    pub state_or_region: Option<String>,
    /// The municipality.
    #[serde(rename = "Municipality", skip_serializing_if = "Option::is_none")]
    pub municipality: Option<String>,
    /// The postal code.
    #[serde(rename = "PostalCode", skip_serializing_if = "Option::is_none")]
    pub postal_code: Option<String>,
    /// The country code. A two-character country code, in ISO 3166-1 alpha-2 format.
    #[serde(rename = "CountryCode", skip_serializing_if = "Option::is_none")]
    pub country_code: Option<String>,
    /// The phone number of the buyer.  **Note**:  1. This attribute is only available for shipping address. 2. In some cases, the buyer phone number is suppressed:  a. Phone is suppressed for all `AFN` (fulfilled by Amazon) orders. b. Phone is suppressed for the shipped `MFN` (fulfilled by seller) order when the current date is past the Latest Delivery Date.
    #[serde(rename = "Phone", skip_serializing_if = "Option::is_none")]
    pub phone: Option<String>,
    #[serde(rename = "ExtendedFields", skip_serializing_if = "Option::is_none")]
    pub extended_fields: Option<Box<models::orders_v0::AddressExtendedFields>>,
    /// The address type of the shipping address.
    #[serde(rename = "AddressType", skip_serializing_if = "Option::is_none")]
    pub address_type: Option<AddressType>,
}

impl Address {
    /// The shipping address for the order.
    pub fn new(name: String) -> Address {
        Address {
            name,
            company_name: None,
            address_line1: None,
            address_line2: None,
            address_line3: None,
            city: None,
            county: None,
            district: None,
            state_or_region: None,
            municipality: None,
            postal_code: None,
            country_code: None,
            phone: None,
            extended_fields: None,
            address_type: None,
        }
    }
}
/// The address type of the shipping address.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum AddressType {
    #[serde(rename = "Residential")]
    Residential,
    #[serde(rename = "Commercial")]
    Commercial,
}

impl Default for AddressType {
    fn default() -> AddressType {
        Self::Residential
    }
}

