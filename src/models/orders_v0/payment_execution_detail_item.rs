/*
 * Selling Partner API for Orders
 *
 * Use the Orders Selling Partner API to programmatically retrieve order information. With this API, you can develop fast, flexible, and custom applications to manage order synchronization, perform order research, and create demand-based decision support tools.   _Note:_ For the JP, AU, and SG marketplaces, the Orders API supports orders from 2016 onward. For all other marketplaces, the Orders API supports orders for the last two years (orders older than this don't show up in the response).
 *
 * The version of the OpenAPI document: v0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// PaymentExecutionDetailItem : Information about a sub-payment method used to pay for a COD order.
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct PaymentExecutionDetailItem {
    #[serde(rename = "Payment")]
    pub payment: Box<models::orders_v0::Money>,
    /// A sub-payment method for a COD order.  **Possible values**: * `COD`: Cash on delivery  * `GC`: Gift card  * `PointsAccount`: Amazon Points * `Invoice`: Invoice
    #[serde(rename = "PaymentMethod")]
    pub payment_method: String,
}

impl PaymentExecutionDetailItem {
    /// Information about a sub-payment method used to pay for a COD order.
    pub fn new(payment: models::orders_v0::Money, payment_method: String) -> PaymentExecutionDetailItem {
        PaymentExecutionDetailItem {
            payment: Box::new(payment),
            payment_method,
        }
    }
}

