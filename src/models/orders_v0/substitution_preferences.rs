/*
 * Selling Partner API for Orders
 *
 * Use the Orders Selling Partner API to programmatically retrieve order information. With this API, you can develop fast, flexible, and custom applications to manage order synchronization, perform order research, and create demand-based decision support tools.   _Note:_ For the JP, AU, and SG marketplaces, the Orders API supports orders from 2016 onward. For all other marketplaces, the Orders API supports orders for the last two years (orders older than this don't show up in the response).
 *
 * The version of the OpenAPI document: v0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// SubstitutionPreferences : Substitution preferences for an order item.
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct SubstitutionPreferences {
    /// The type of substitution that these preferences represent.
    #[serde(rename = "SubstitutionType")]
    pub substitution_type: SubstitutionType,
    /// A collection of substitution options.
    #[serde(rename = "SubstitutionOptions", skip_serializing_if = "Option::is_none")]
    pub substitution_options: Option<Vec<models::orders_v0::SubstitutionOption>>,
}

impl SubstitutionPreferences {
    /// Substitution preferences for an order item.
    pub fn new(substitution_type: SubstitutionType) -> SubstitutionPreferences {
        SubstitutionPreferences {
            substitution_type,
            substitution_options: None,
        }
    }
}
/// The type of substitution that these preferences represent.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum SubstitutionType {
    #[serde(rename = "CUSTOMER_PREFERENCE")]
    CustomerPreference,
    #[serde(rename = "AMAZON_RECOMMENDED")]
    AmazonRecommended,
    #[serde(rename = "DO_NOT_SUBSTITUTE")]
    DoNotSubstitute,
}

impl Default for SubstitutionType {
    fn default() -> SubstitutionType {
        Self::CustomerPreference
    }
}

