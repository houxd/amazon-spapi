/*
 * Selling Partner API for Orders
 *
 * Use the Orders Selling Partner API to programmatically retrieve order information. With this API, you can develop fast, flexible, and custom applications to manage order synchronization, perform order research, and create demand-based decision support tools.   _Note:_ For the JP, AU, and SG marketplaces, the Orders API supports orders from 2016 onward. For all other marketplaces, the Orders API supports orders for the last two years (orders older than this don't show up in the response).
 *
 * The version of the OpenAPI document: v0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// OrderItemsBuyerInfoList : A single order item's buyer information list with the order ID.
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct OrderItemsBuyerInfoList {
    /// A single order item's buyer information list.
    #[serde(rename = "OrderItems")]
    pub order_items: Vec<models::orders_v0::OrderItemBuyerInfo>,
    /// When present and not empty, pass this string token in the next request to return the next response page.
    #[serde(rename = "NextToken", skip_serializing_if = "Option::is_none")]
    pub next_token: Option<String>,
    /// An Amazon-defined order identifier, in 3-7-7 format.
    #[serde(rename = "AmazonOrderId")]
    pub amazon_order_id: String,
}

impl OrderItemsBuyerInfoList {
    /// A single order item's buyer information list with the order ID.
    pub fn new(order_items: Vec<models::orders_v0::OrderItemBuyerInfo>, amazon_order_id: String) -> OrderItemsBuyerInfoList {
        OrderItemsBuyerInfoList {
            order_items,
            next_token: None,
            amazon_order_id,
        }
    }
}

