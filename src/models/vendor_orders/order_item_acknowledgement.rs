/*
 * Selling Partner API for Retail Procurement Orders
 *
 * The Selling Partner API for Retail Procurement Orders provides programmatic access to vendor orders data.
 *
 * The version of the OpenAPI document: v1
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// OrderItemAcknowledgement : Represents the acknowledgement details for an individual order item, including the acknowledgement code, acknowledged quantity, scheduled ship and delivery dates, and rejection reason (if applicable).
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct OrderItemAcknowledgement {
    /// This indicates the acknowledgement code.
    #[serde(rename = "acknowledgementCode")]
    pub acknowledgement_code: AcknowledgementCode,
    #[serde(rename = "acknowledgedQuantity")]
    pub acknowledged_quantity: Box<models::vendor_orders::ItemQuantity>,
    /// Estimated ship date per line item. Must be in ISO-8601 date/time format.
    #[serde(rename = "scheduledShipDate", skip_serializing_if = "Option::is_none")]
    pub scheduled_ship_date: Option<String>,
    /// Estimated delivery date per line item. Must be in ISO-8601 date/time format.
    #[serde(rename = "scheduledDeliveryDate", skip_serializing_if = "Option::is_none")]
    pub scheduled_delivery_date: Option<String>,
    /// Indicates the reason for rejection.
    #[serde(rename = "rejectionReason", skip_serializing_if = "Option::is_none")]
    pub rejection_reason: Option<RejectionReason>,
}

impl OrderItemAcknowledgement {
    /// Represents the acknowledgement details for an individual order item, including the acknowledgement code, acknowledged quantity, scheduled ship and delivery dates, and rejection reason (if applicable).
    pub fn new(acknowledgement_code: AcknowledgementCode, acknowledged_quantity: models::vendor_orders::ItemQuantity) -> OrderItemAcknowledgement {
        OrderItemAcknowledgement {
            acknowledgement_code,
            acknowledged_quantity: Box::new(acknowledged_quantity),
            scheduled_ship_date: None,
            scheduled_delivery_date: None,
            rejection_reason: None,
        }
    }
}
/// This indicates the acknowledgement code.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum AcknowledgementCode {
    #[serde(rename = "Accepted")]
    Accepted,
    #[serde(rename = "Backordered")]
    Backordered,
    #[serde(rename = "Rejected")]
    Rejected,
}

impl Default for AcknowledgementCode {
    fn default() -> AcknowledgementCode {
        Self::Accepted
    }
}
/// Indicates the reason for rejection.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum RejectionReason {
    #[serde(rename = "TemporarilyUnavailable")]
    TemporarilyUnavailable,
    #[serde(rename = "InvalidProductIdentifier")]
    InvalidProductIdentifier,
    #[serde(rename = "ObsoleteProduct")]
    ObsoleteProduct,
}

impl Default for RejectionReason {
    fn default() -> RejectionReason {
        Self::TemporarilyUnavailable
    }
}

