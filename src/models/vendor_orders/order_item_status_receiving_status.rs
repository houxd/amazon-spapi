/*
 * Selling Partner API for Retail Procurement Orders
 *
 * The Selling Partner API for Retail Procurement Orders provides programmatic access to vendor orders data.
 *
 * The version of the OpenAPI document: v1
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// OrderItemStatusReceivingStatus : Item receive status at the buyer's warehouse.
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct OrderItemStatusReceivingStatus {
    /// Receive status of the line item.
    #[serde(rename = "receiveStatus", skip_serializing_if = "Option::is_none")]
    pub receive_status: Option<ReceiveStatus>,
    #[serde(rename = "receivedQuantity", skip_serializing_if = "Option::is_none")]
    pub received_quantity: Option<Box<models::vendor_orders::ItemQuantity>>,
    /// The date when the most recent item was received at the buyer's warehouse. Must be in ISO-8601 date/time format.
    #[serde(rename = "lastReceiveDate", skip_serializing_if = "Option::is_none")]
    pub last_receive_date: Option<String>,
}

impl OrderItemStatusReceivingStatus {
    /// Item receive status at the buyer's warehouse.
    pub fn new() -> OrderItemStatusReceivingStatus {
        OrderItemStatusReceivingStatus {
            receive_status: None,
            received_quantity: None,
            last_receive_date: None,
        }
    }
}
/// Receive status of the line item.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum ReceiveStatus {
    #[serde(rename = "NOT_RECEIVED")]
    NotReceived,
    #[serde(rename = "PARTIALLY_RECEIVED")]
    PartiallyReceived,
    #[serde(rename = "RECEIVED")]
    Received,
}

impl Default for ReceiveStatus {
    fn default() -> ReceiveStatus {
        Self::NotReceived
    }
}

