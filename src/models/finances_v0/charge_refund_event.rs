/*
 * Selling Partner API for Finances
 *
 * The Selling Partner API for Finances helps you obtain financial information relevant to a seller's business. You can obtain financial events for a given order, financial event group, or date range without having to wait until a statement period closes. You can also obtain financial event groups for a given date range.
 *
 * The version of the OpenAPI document: v0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// ChargeRefundEvent : An event related to charge refund.
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct ChargeRefundEvent {
    /// Fields with a schema type of date are in ISO 8601 date time format (for example GroupBeginDate).
    #[serde(rename = "PostedDate", skip_serializing_if = "Option::is_none")]
    pub posted_date: Option<String>,
    /// The reason given for a charge refund.  Example: `SubscriptionFeeCorrection`
    #[serde(rename = "ReasonCode", skip_serializing_if = "Option::is_none")]
    pub reason_code: Option<String>,
    /// A description of the Reason Code.   Example: `SubscriptionFeeCorrection`
    #[serde(rename = "ReasonCodeDescription", skip_serializing_if = "Option::is_none")]
    pub reason_code_description: Option<String>,
    /// A list of `ChargeRefund` transactions
    #[serde(rename = "ChargeRefundTransactions", skip_serializing_if = "Option::is_none")]
    pub charge_refund_transactions: Option<Vec<models::finances_v0::ChargeRefundTransaction>>,
}

impl ChargeRefundEvent {
    /// An event related to charge refund.
    pub fn new() -> ChargeRefundEvent {
        ChargeRefundEvent {
            posted_date: None,
            reason_code: None,
            reason_code_description: None,
            charge_refund_transactions: None,
        }
    }
}

