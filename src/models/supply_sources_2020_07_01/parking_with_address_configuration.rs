/*
 * Selling Partner API for Supply Sources
 *
 * Manage configurations and capabilities of seller supply sources.
 *
 * The version of the OpenAPI document: 2020-07-01
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// ParkingWithAddressConfiguration : The parking configuration with the address.
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct ParkingWithAddressConfiguration {
    #[serde(rename = "parkingCostType", skip_serializing_if = "Option::is_none")]
    pub parking_cost_type: Option<models::supply_sources_2020_07_01::ParkingCostType>,
    #[serde(rename = "parkingSpotIdentificationType", skip_serializing_if = "Option::is_none")]
    pub parking_spot_identification_type: Option<models::supply_sources_2020_07_01::ParkingSpotIdentificationType>,
    /// An unsigned integer that can be only positive or zero.
    #[serde(rename = "numberOfParkingSpots", skip_serializing_if = "Option::is_none")]
    pub number_of_parking_spots: Option<i32>,
    #[serde(rename = "address", skip_serializing_if = "Option::is_none")]
    pub address: Option<Box<models::supply_sources_2020_07_01::Address>>,
}

impl ParkingWithAddressConfiguration {
    /// The parking configuration with the address.
    pub fn new() -> ParkingWithAddressConfiguration {
        ParkingWithAddressConfiguration {
            parking_cost_type: None,
            parking_spot_identification_type: None,
            number_of_parking_spots: None,
            address: None,
        }
    }
}

