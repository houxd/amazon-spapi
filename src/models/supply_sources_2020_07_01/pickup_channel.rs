/*
 * Selling Partner API for Supply Sources
 *
 * Manage configurations and capabilities of seller supply sources.
 *
 * The version of the OpenAPI document: 2020-07-01
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// PickupChannel : The pick up channel of a supply source.
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct PickupChannel {
    #[serde(rename = "inventoryHoldPeriod", skip_serializing_if = "Option::is_none")]
    pub inventory_hold_period: Option<Box<models::supply_sources_2020_07_01::Duration>>,
    #[serde(rename = "isSupported", skip_serializing_if = "Option::is_none")]
    pub is_supported: Option<bool>,
    #[serde(rename = "operationalConfiguration", skip_serializing_if = "Option::is_none")]
    pub operational_configuration: Option<Box<models::supply_sources_2020_07_01::OperationalConfiguration>>,
    #[serde(rename = "inStorePickupConfiguration", skip_serializing_if = "Option::is_none")]
    pub in_store_pickup_configuration: Option<Box<models::supply_sources_2020_07_01::InStorePickupConfiguration>>,
    #[serde(rename = "curbsidePickupConfiguration", skip_serializing_if = "Option::is_none")]
    pub curbside_pickup_configuration: Option<Box<models::supply_sources_2020_07_01::CurbsidePickupConfiguration>>,
}

impl PickupChannel {
    /// The pick up channel of a supply source.
    pub fn new() -> PickupChannel {
        PickupChannel {
            inventory_hold_period: None,
            is_supported: None,
            operational_configuration: None,
            in_store_pickup_configuration: None,
            curbside_pickup_configuration: None,
        }
    }
}

