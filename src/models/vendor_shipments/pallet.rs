/*
 * Selling Partner API for Retail Procurement Shipments
 *
 * The Selling Partner API for Retail Procurement Shipments provides programmatic access to retail shipping data for vendors.
 *
 * The version of the OpenAPI document: v1
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// Pallet : Details of the Pallet/Tare being shipped.
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct Pallet {
    /// A list of pallet identifiers.
    #[serde(rename = "palletIdentifiers")]
    pub pallet_identifiers: Vec<models::vendor_shipments::ContainerIdentification>,
    /// Number of layers per pallet. Only applicable to container type Pallet.
    #[serde(rename = "tier", skip_serializing_if = "Option::is_none")]
    pub tier: Option<i32>,
    /// Number of cartons per layer on the pallet. Only applicable to container type Pallet.
    #[serde(rename = "block", skip_serializing_if = "Option::is_none")]
    pub block: Option<i32>,
    #[serde(rename = "dimensions", skip_serializing_if = "Option::is_none")]
    pub dimensions: Option<Box<models::vendor_shipments::Dimensions>>,
    #[serde(rename = "weight", skip_serializing_if = "Option::is_none")]
    pub weight: Option<Box<models::vendor_shipments::Weight>>,
    #[serde(rename = "cartonReferenceDetails", skip_serializing_if = "Option::is_none")]
    pub carton_reference_details: Option<Box<models::vendor_shipments::CartonReferenceDetails>>,
    /// A list of container item details.
    #[serde(rename = "items", skip_serializing_if = "Option::is_none")]
    pub items: Option<Vec<models::vendor_shipments::ContainerItem>>,
}

impl Pallet {
    /// Details of the Pallet/Tare being shipped.
    pub fn new(pallet_identifiers: Vec<models::vendor_shipments::ContainerIdentification>) -> Pallet {
        Pallet {
            pallet_identifiers,
            tier: None,
            block: None,
            dimensions: None,
            weight: None,
            carton_reference_details: None,
            items: None,
        }
    }
}

