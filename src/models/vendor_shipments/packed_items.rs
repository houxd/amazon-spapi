/*
 * Selling Partner API for Retail Procurement Shipments
 *
 * The Selling Partner API for Retail Procurement Shipments provides programmatic access to retail shipping data for vendors.
 *
 * The version of the OpenAPI document: v1
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// PackedItems : Details of the item being shipped.
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct PackedItems {
    /// Item sequence number for the item. The first item will be 001, the second 002, and so on. This number is used as a reference to refer to this item from the carton or pallet level.
    #[serde(rename = "itemSequenceNumber", skip_serializing_if = "Option::is_none")]
    pub item_sequence_number: Option<String>,
    /// Buyer Standard Identification Number (ASIN) of an item.
    #[serde(rename = "buyerProductIdentifier", skip_serializing_if = "Option::is_none")]
    pub buyer_product_identifier: Option<String>,
    /// The vendor selected product identification of the item. Should be the same as was sent in the purchase order.
    #[serde(rename = "vendorProductIdentifier", skip_serializing_if = "Option::is_none")]
    pub vendor_product_identifier: Option<String>,
    #[serde(rename = "packedQuantity", skip_serializing_if = "Option::is_none")]
    pub packed_quantity: Option<Box<models::vendor_shipments::ItemQuantity>>,
    #[serde(rename = "itemDetails", skip_serializing_if = "Option::is_none")]
    pub item_details: Option<Box<models::vendor_shipments::PackageItemDetails>>,
}

impl PackedItems {
    /// Details of the item being shipped.
    pub fn new() -> PackedItems {
        PackedItems {
            item_sequence_number: None,
            buyer_product_identifier: None,
            vendor_product_identifier: None,
            packed_quantity: None,
            item_details: None,
        }
    }
}

