/*
 * Selling Partner API for Retail Procurement Shipments
 *
 * The Selling Partner API for Retail Procurement Shipments provides programmatic access to retail shipping data for vendors.
 *
 * The version of the OpenAPI document: v1
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// PurchaseOrders : Transport Request pickup date
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct PurchaseOrders {
    /// Purchase order numbers involved in this shipment, list all the PO that are involved as part of this shipment.
    #[serde(rename = "purchaseOrderNumber", skip_serializing_if = "Option::is_none")]
    pub purchase_order_number: Option<String>,
    /// Purchase order numbers involved in this shipment, list all the PO that are involved as part of this shipment.
    #[serde(rename = "purchaseOrderDate", skip_serializing_if = "Option::is_none")]
    pub purchase_order_date: Option<String>,
    /// Date range in which shipment is expected for these purchase orders.
    #[serde(rename = "shipWindow", skip_serializing_if = "Option::is_none")]
    pub ship_window: Option<String>,
    /// A list of the items that are associated to the PO in this transport and their associated details.
    #[serde(rename = "items", skip_serializing_if = "Option::is_none")]
    pub items: Option<Vec<models::vendor_shipments::PurchaseOrderItems>>,
}

impl PurchaseOrders {
    /// Transport Request pickup date
    pub fn new() -> PurchaseOrders {
        PurchaseOrders {
            purchase_order_number: None,
            purchase_order_date: None,
            ship_window: None,
            items: None,
        }
    }
}

