/*
 * Selling Partner API for Retail Procurement Shipments
 *
 * The Selling Partner API for Retail Procurement Shipments provides programmatic access to retail shipping data for vendors.
 *
 * The version of the OpenAPI document: v1
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// ItemQuantity : Details of item quantity.
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct ItemQuantity {
    /// Amount of units shipped for a specific item at a shipment level. If the item is present only in certain cartons or pallets within the shipment, please provide this at the appropriate carton or pallet level.
    #[serde(rename = "amount")]
    pub amount: i32,
    /// Unit of measure for the shipped quantity.
    #[serde(rename = "unitOfMeasure")]
    pub unit_of_measure: UnitOfMeasure,
    /// The case size, in the event that we ordered using cases. Otherwise, 1.
    #[serde(rename = "unitSize", skip_serializing_if = "Option::is_none")]
    pub unit_size: Option<i32>,
    #[serde(rename = "totalWeight", skip_serializing_if = "Option::is_none")]
    pub total_weight: Option<Box<models::vendor_shipments::TotalWeight>>,
}

impl ItemQuantity {
    /// Details of item quantity.
    pub fn new(amount: i32, unit_of_measure: UnitOfMeasure) -> ItemQuantity {
        ItemQuantity {
            amount,
            unit_of_measure,
            unit_size: None,
            total_weight: None,
        }
    }
}
/// Unit of measure for the shipped quantity.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum UnitOfMeasure {
    #[serde(rename = "Cases")]
    Cases,
    #[serde(rename = "Eaches")]
    Eaches,
}

impl Default for UnitOfMeasure {
    fn default() -> UnitOfMeasure {
        Self::Cases
    }
}

