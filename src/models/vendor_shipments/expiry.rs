/*
 * Selling Partner API for Retail Procurement Shipments
 *
 * The Selling Partner API for Retail Procurement Shipments provides programmatic access to retail shipping data for vendors.
 *
 * The version of the OpenAPI document: v1
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// Expiry : Expiry refers to the collection of dates required  for certain items. These could be either expiryDate or mfgDate and expiryAfterDuration. These are mandatory for perishable items.
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct Expiry {
    /// Production, packaging or assembly date determined by the manufacturer. Its meaning is determined based on the trade item context.
    #[serde(rename = "manufacturerDate", skip_serializing_if = "Option::is_none")]
    pub manufacturer_date: Option<String>,
    /// The date that determines the limit of consumption or use of a product. Its meaning is determined based on the trade item context.
    #[serde(rename = "expiryDate", skip_serializing_if = "Option::is_none")]
    pub expiry_date: Option<String>,
    #[serde(rename = "expiryAfterDuration", skip_serializing_if = "Option::is_none")]
    pub expiry_after_duration: Option<Box<models::vendor_shipments::Duration>>,
}

impl Expiry {
    /// Expiry refers to the collection of dates required  for certain items. These could be either expiryDate or mfgDate and expiryAfterDuration. These are mandatory for perishable items.
    pub fn new() -> Expiry {
        Expiry {
            manufacturer_date: None,
            expiry_date: None,
            expiry_after_duration: None,
        }
    }
}

