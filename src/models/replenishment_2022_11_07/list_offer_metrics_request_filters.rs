/*
 * Selling Partner API for Replenishment
 *
 * The Selling Partner API for Replenishment (Replenishment API) provides programmatic access to replenishment program metrics and offers. These programs provide recurring delivery of any replenishable item at a frequency chosen by the customer.  The Replenishment API is available worldwide wherever Amazon Subscribe & Save is available or is supported. The API is available to vendors and FBA selling partners.
 *
 * The version of the OpenAPI document: 2022-11-07
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// ListOfferMetricsRequestFilters : Use these parameters to filter results. Any result must match all provided parameters. For any parameter that is an array, the result must match at least one element in the provided array.
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct ListOfferMetricsRequestFilters {
    #[serde(rename = "aggregationFrequency", skip_serializing_if = "Option::is_none")]
    pub aggregation_frequency: Option<models::replenishment_2022_11_07::AggregationFrequency>,
    #[serde(rename = "timeInterval")]
    pub time_interval: Box<models::replenishment_2022_11_07::TimeInterval>,
    #[serde(rename = "timePeriodType")]
    pub time_period_type: models::replenishment_2022_11_07::TimePeriodType,
    /// The marketplace identifier. The supported marketplaces for both sellers and vendors are US, CA, ES, UK, FR, IT, IN, DE and JP. The supported marketplaces for vendors only are BR, AU, MX, AE and NL. Refer to [Marketplace IDs](https://developer-docs.amazon.com/sp-api/docs/marketplace-ids) to find the identifier for the marketplace.
    #[serde(rename = "marketplaceId")]
    pub marketplace_id: String,
    /// A list of replenishment program types.
    #[serde(rename = "programTypes")]
    pub program_types: Vec<models::replenishment_2022_11_07::ProgramType>,
    /// A list of Amazon Standard Identification Numbers (ASINs).
    #[serde(rename = "asins", skip_serializing_if = "Option::is_none")]
    pub asins: Option<Vec<String>>,
}

impl ListOfferMetricsRequestFilters {
    /// Use these parameters to filter results. Any result must match all provided parameters. For any parameter that is an array, the result must match at least one element in the provided array.
    pub fn new(time_interval: models::replenishment_2022_11_07::TimeInterval, time_period_type: models::replenishment_2022_11_07::TimePeriodType, marketplace_id: String, program_types: Vec<models::replenishment_2022_11_07::ProgramType>) -> ListOfferMetricsRequestFilters {
        ListOfferMetricsRequestFilters {
            aggregation_frequency: None,
            time_interval: Box::new(time_interval),
            time_period_type,
            marketplace_id,
            program_types,
            asins: None,
        }
    }
}

