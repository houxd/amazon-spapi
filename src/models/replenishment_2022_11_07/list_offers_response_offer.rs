/*
 * Selling Partner API for Replenishment
 *
 * The Selling Partner API for Replenishment (Replenishment API) provides programmatic access to replenishment program metrics and offers. These programs provide recurring delivery of any replenishable item at a frequency chosen by the customer.  The Replenishment API is available worldwide wherever Amazon Subscribe & Save is available or is supported. The API is available to vendors and FBA selling partners.
 *
 * The version of the OpenAPI document: 2022-11-07
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// ListOffersResponseOffer : An object which contains details about an offer.
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct ListOffersResponseOffer {
    /// The SKU. This property is only supported for sellers and not for vendors.
    #[serde(rename = "sku", skip_serializing_if = "Option::is_none")]
    pub sku: Option<String>,
    /// The Amazon Standard Identification Number (ASIN).
    #[serde(rename = "asin", skip_serializing_if = "Option::is_none")]
    pub asin: Option<String>,
    /// The marketplace identifier. The supported marketplaces for both sellers and vendors are US, CA, ES, UK, FR, IT, IN, DE and JP. The supported marketplaces for vendors only are BR, AU, MX, AE and NL. Refer to [Marketplace IDs](https://developer-docs.amazon.com/sp-api/docs/marketplace-ids) to find the identifier for the marketplace.
    #[serde(rename = "marketplaceId", skip_serializing_if = "Option::is_none")]
    pub marketplace_id: Option<String>,
    #[serde(rename = "eligibility", skip_serializing_if = "Option::is_none")]
    pub eligibility: Option<models::replenishment_2022_11_07::EligibilityStatus>,
    #[serde(rename = "offerProgramConfiguration", skip_serializing_if = "Option::is_none")]
    pub offer_program_configuration: Option<Box<models::replenishment_2022_11_07::OfferProgramConfiguration>>,
    #[serde(rename = "programType", skip_serializing_if = "Option::is_none")]
    pub program_type: Option<models::replenishment_2022_11_07::ProgramType>,
    /// A list of vendor codes associated with the offer.
    #[serde(rename = "vendorCodes", skip_serializing_if = "Option::is_none")]
    pub vendor_codes: Option<Vec<String>>,
}

impl ListOffersResponseOffer {
    /// An object which contains details about an offer.
    pub fn new() -> ListOffersResponseOffer {
        ListOffersResponseOffer {
            sku: None,
            asin: None,
            marketplace_id: None,
            eligibility: None,
            offer_program_configuration: None,
            program_type: None,
            vendor_codes: None,
        }
    }
}

