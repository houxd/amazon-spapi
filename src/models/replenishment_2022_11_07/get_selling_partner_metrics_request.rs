/*
 * Selling Partner API for Replenishment
 *
 * The Selling Partner API for Replenishment (Replenishment API) provides programmatic access to replenishment program metrics and offers. These programs provide recurring delivery of any replenishable item at a frequency chosen by the customer.  The Replenishment API is available worldwide wherever Amazon Subscribe & Save is available or is supported. The API is available to vendors and FBA selling partners.
 *
 * The version of the OpenAPI document: 2022-11-07
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// GetSellingPartnerMetricsRequest : The request body for the `getSellingPartnerMetrics` operation.
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct GetSellingPartnerMetricsRequest {
    #[serde(rename = "aggregationFrequency", skip_serializing_if = "Option::is_none")]
    pub aggregation_frequency: Option<models::replenishment_2022_11_07::AggregationFrequency>,
    #[serde(rename = "timeInterval")]
    pub time_interval: Box<models::replenishment_2022_11_07::TimeInterval>,
    /// The list of metrics requested. If no metric value is provided, data for all of the metrics will be returned.
    #[serde(rename = "metrics", skip_serializing_if = "Option::is_none")]
    pub metrics: Option<Vec<models::replenishment_2022_11_07::Metric>>,
    #[serde(rename = "timePeriodType")]
    pub time_period_type: models::replenishment_2022_11_07::TimePeriodType,
    /// The marketplace identifier. The supported marketplaces for both sellers and vendors are US, CA, ES, UK, FR, IT, IN, DE and JP. The supported marketplaces for vendors only are BR, AU, MX, AE and NL. Refer to [Marketplace IDs](https://developer-docs.amazon.com/sp-api/docs/marketplace-ids) to find the identifier for the marketplace.
    #[serde(rename = "marketplaceId")]
    pub marketplace_id: String,
    /// A list of replenishment program types.
    #[serde(rename = "programTypes")]
    pub program_types: Vec<models::replenishment_2022_11_07::ProgramType>,
}

impl GetSellingPartnerMetricsRequest {
    /// The request body for the `getSellingPartnerMetrics` operation.
    pub fn new(time_interval: models::replenishment_2022_11_07::TimeInterval, time_period_type: models::replenishment_2022_11_07::TimePeriodType, marketplace_id: String, program_types: Vec<models::replenishment_2022_11_07::ProgramType>) -> GetSellingPartnerMetricsRequest {
        GetSellingPartnerMetricsRequest {
            aggregation_frequency: None,
            time_interval: Box::new(time_interval),
            metrics: None,
            time_period_type,
            marketplace_id,
            program_types,
        }
    }
}

