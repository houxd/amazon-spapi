/*
 * Selling Partner API for Replenishment
 *
 * The Selling Partner API for Replenishment (Replenishment API) provides programmatic access to replenishment program metrics and offers. These programs provide recurring delivery of any replenishable item at a frequency chosen by the customer.  The Replenishment API is available worldwide wherever Amazon Subscribe & Save is available or is supported. The API is available to vendors and FBA selling partners.
 *
 * The version of the OpenAPI document: 2022-11-07
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// ListOfferMetricsSortKey : The attribute to use to sort the results.
/// The attribute to use to sort the results.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum ListOfferMetricsSortKey {
    #[serde(rename = "SHIPPED_SUBSCRIPTION_UNITS")]
    ShippedSubscriptionUnits,
    #[serde(rename = "TOTAL_SUBSCRIPTIONS_REVENUE")]
    TotalSubscriptionsRevenue,
    #[serde(rename = "ACTIVE_SUBSCRIPTIONS")]
    ActiveSubscriptions,
    #[serde(rename = "NEXT_90DAYS_SHIPPED_SUBSCRIPTION_UNITS")]
    Next90DaysShippedSubscriptionUnits,
    #[serde(rename = "NEXT_60DAYS_SHIPPED_SUBSCRIPTION_UNITS")]
    Next60DaysShippedSubscriptionUnits,
    #[serde(rename = "NEXT_30DAYS_SHIPPED_SUBSCRIPTION_UNITS")]
    Next30DaysShippedSubscriptionUnits,
    #[serde(rename = "NEXT_90DAYS_TOTAL_SUBSCRIPTIONS_REVENUE")]
    Next90DaysTotalSubscriptionsRevenue,
    #[serde(rename = "NEXT_60DAYS_TOTAL_SUBSCRIPTIONS_REVENUE")]
    Next60DaysTotalSubscriptionsRevenue,
    #[serde(rename = "NEXT_30DAYS_TOTAL_SUBSCRIPTIONS_REVENUE")]
    Next30DaysTotalSubscriptionsRevenue,

}

impl std::fmt::Display for ListOfferMetricsSortKey {
    fn fmt(&self, f: &mut std::fmt::Formatter) -> std::fmt::Result {
        match self {
            Self::ShippedSubscriptionUnits => write!(f, "SHIPPED_SUBSCRIPTION_UNITS"),
            Self::TotalSubscriptionsRevenue => write!(f, "TOTAL_SUBSCRIPTIONS_REVENUE"),
            Self::ActiveSubscriptions => write!(f, "ACTIVE_SUBSCRIPTIONS"),
            Self::Next90DaysShippedSubscriptionUnits => write!(f, "NEXT_90DAYS_SHIPPED_SUBSCRIPTION_UNITS"),
            Self::Next60DaysShippedSubscriptionUnits => write!(f, "NEXT_60DAYS_SHIPPED_SUBSCRIPTION_UNITS"),
            Self::Next30DaysShippedSubscriptionUnits => write!(f, "NEXT_30DAYS_SHIPPED_SUBSCRIPTION_UNITS"),
            Self::Next90DaysTotalSubscriptionsRevenue => write!(f, "NEXT_90DAYS_TOTAL_SUBSCRIPTIONS_REVENUE"),
            Self::Next60DaysTotalSubscriptionsRevenue => write!(f, "NEXT_60DAYS_TOTAL_SUBSCRIPTIONS_REVENUE"),
            Self::Next30DaysTotalSubscriptionsRevenue => write!(f, "NEXT_30DAYS_TOTAL_SUBSCRIPTIONS_REVENUE"),
        }
    }
}

impl Default for ListOfferMetricsSortKey {
    fn default() -> ListOfferMetricsSortKey {
        Self::ShippedSubscriptionUnits
    }
}

