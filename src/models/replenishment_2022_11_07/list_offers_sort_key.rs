/*
 * Selling Partner API for Replenishment
 *
 * The Selling Partner API for Replenishment (Replenishment API) provides programmatic access to replenishment program metrics and offers. These programs provide recurring delivery of any replenishable item at a frequency chosen by the customer.  The Replenishment API is available worldwide wherever Amazon Subscribe & Save is available or is supported. The API is available to vendors and FBA selling partners.
 *
 * The version of the OpenAPI document: 2022-11-07
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// ListOffersSortKey : The attribute to use to sort the results.
/// The attribute to use to sort the results.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum ListOffersSortKey {
    #[serde(rename = "ASIN")]
    Asin,
    #[serde(rename = "SELLING_PARTNER_FUNDED_BASE_DISCOUNT_PERCENTAGE")]
    SellingPartnerFundedBaseDiscountPercentage,
    #[serde(rename = "SELLING_PARTNER_FUNDED_TIERED_DISCOUNT_PERCENTAGE")]
    SellingPartnerFundedTieredDiscountPercentage,
    #[serde(rename = "AMAZON_FUNDED_BASE_DISCOUNT_PERCENTAGE")]
    AmazonFundedBaseDiscountPercentage,
    #[serde(rename = "AMAZON_FUNDED_TIERED_DISCOUNT_PERCENTAGE")]
    AmazonFundedTieredDiscountPercentage,

}

impl std::fmt::Display for ListOffersSortKey {
    fn fmt(&self, f: &mut std::fmt::Formatter) -> std::fmt::Result {
        match self {
            Self::Asin => write!(f, "ASIN"),
            Self::SellingPartnerFundedBaseDiscountPercentage => write!(f, "SELLING_PARTNER_FUNDED_BASE_DISCOUNT_PERCENTAGE"),
            Self::SellingPartnerFundedTieredDiscountPercentage => write!(f, "SELLING_PARTNER_FUNDED_TIERED_DISCOUNT_PERCENTAGE"),
            Self::AmazonFundedBaseDiscountPercentage => write!(f, "AMAZON_FUNDED_BASE_DISCOUNT_PERCENTAGE"),
            Self::AmazonFundedTieredDiscountPercentage => write!(f, "AMAZON_FUNDED_TIERED_DISCOUNT_PERCENTAGE"),
        }
    }
}

impl Default for ListOffersSortKey {
    fn default() -> ListOffersSortKey {
        Self::Asin
    }
}

