/*
 * Selling Partner API for Shipping
 *
 * Provides programmatic access to Amazon Shipping APIs.   **Note:** If you are new to the Amazon Shipping API, refer to the latest version of <a href=\"https://developer-docs.amazon.com/amazon-shipping/docs/shipping-api-v2-reference\">Amazon Shipping API (v2)</a> on the <a href=\"https://developer-docs.amazon.com/amazon-shipping/\">Amazon Shipping Developer Documentation</a> site.
 *
 * The version of the OpenAPI document: v1
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// ServiceType : The type of shipping service that will be used for the service offering.
/// The type of shipping service that will be used for the service offering.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum ServiceType {
    #[serde(rename = "Amazon Shipping Ground")]
    AmazonShippingGround,
    #[serde(rename = "Amazon Shipping Standard")]
    AmazonShippingStandard,
    #[serde(rename = "Amazon Shipping Premium")]
    AmazonShippingPremium,

}

impl std::fmt::Display for ServiceType {
    fn fmt(&self, f: &mut std::fmt::Formatter) -> std::fmt::Result {
        match self {
            Self::AmazonShippingGround => write!(f, "Amazon Shipping Ground"),
            Self::AmazonShippingStandard => write!(f, "Amazon Shipping Standard"),
            Self::AmazonShippingPremium => write!(f, "Amazon Shipping Premium"),
        }
    }
}

impl Default for ServiceType {
    fn default() -> ServiceType {
        Self::AmazonShippingGround
    }
}

