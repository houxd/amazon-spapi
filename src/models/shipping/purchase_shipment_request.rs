/*
 * Selling Partner API for Shipping
 *
 * Provides programmatic access to Amazon Shipping APIs.   **Note:** If you are new to the Amazon Shipping API, refer to the latest version of <a href=\"https://developer-docs.amazon.com/amazon-shipping/docs/shipping-api-v2-reference\">Amazon Shipping API (v2)</a> on the <a href=\"https://developer-docs.amazon.com/amazon-shipping/\">Amazon Shipping Developer Documentation</a> site.
 *
 * The version of the OpenAPI document: v1
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// PurchaseShipmentRequest : The payload schema for the purchaseShipment operation.
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct PurchaseShipmentRequest {
    /// Client reference id.
    #[serde(rename = "clientReferenceId")]
    pub client_reference_id: String,
    #[serde(rename = "shipTo")]
    pub ship_to: Box<models::shipping::Address>,
    #[serde(rename = "shipFrom")]
    pub ship_from: Box<models::shipping::Address>,
    /// The start date and time. This defaults to the current date and time.
    #[serde(rename = "shipDate", skip_serializing_if = "Option::is_none")]
    pub ship_date: Option<String>,
    #[serde(rename = "serviceType")]
    pub service_type: models::shipping::ServiceType,
    /// A list of container.
    #[serde(rename = "containers")]
    pub containers: Vec<models::shipping::Container>,
    #[serde(rename = "labelSpecification")]
    pub label_specification: Box<models::shipping::LabelSpecification>,
}

impl PurchaseShipmentRequest {
    /// The payload schema for the purchaseShipment operation.
    pub fn new(client_reference_id: String, ship_to: models::shipping::Address, ship_from: models::shipping::Address, service_type: models::shipping::ServiceType, containers: Vec<models::shipping::Container>, label_specification: models::shipping::LabelSpecification) -> PurchaseShipmentRequest {
        PurchaseShipmentRequest {
            client_reference_id,
            ship_to: Box::new(ship_to),
            ship_from: Box::new(ship_from),
            ship_date: None,
            service_type,
            containers,
            label_specification: Box::new(label_specification),
        }
    }
}

