/*
 * Selling Partner API for Shipping
 *
 * Provides programmatic access to Amazon Shipping APIs.   **Note:** If you are new to the Amazon Shipping API, refer to the latest version of <a href=\"https://developer-docs.amazon.com/amazon-shipping/docs/shipping-api-v2-reference\">Amazon Shipping API (v2)</a> on the <a href=\"https://developer-docs.amazon.com/amazon-shipping/\">Amazon Shipping Developer Documentation</a> site.
 *
 * The version of the OpenAPI document: v1
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// Dimensions : A set of measurements for a three-dimensional object.
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct Dimensions {
    /// The length of the container.
    #[serde(rename = "length")]
    pub length: f64,
    /// The width of the container.
    #[serde(rename = "width")]
    pub width: f64,
    /// The height of the container.
    #[serde(rename = "height")]
    pub height: f64,
    /// The unit of these measurements.
    #[serde(rename = "unit")]
    pub unit: Unit,
}

impl Dimensions {
    /// A set of measurements for a three-dimensional object.
    pub fn new(length: f64, width: f64, height: f64, unit: Unit) -> Dimensions {
        Dimensions {
            length,
            width,
            height,
            unit,
        }
    }
}
/// The unit of these measurements.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Unit {
    #[serde(rename = "IN")]
    In,
    #[serde(rename = "CM")]
    Cm,
}

impl Default for Unit {
    fn default() -> Unit {
        Self::In
    }
}

