/*
 * Selling Partner API for Listings Items
 *
 * The Selling Partner API for Listings Items (Listings Items API) provides programmatic access to selling partner listings on Amazon. Use this API in collaboration with the Selling Partner API for Product Type Definitions, which you use to retrieve the information about Amazon product types needed to use the Listings Items API.  For more information, see the [Listings Items API Use Case Guide](https://developer-docs.amazon.com/sp-api/docs/listings-items-api-v2021-08-01-use-case-guide).
 *
 * The version of the OpenAPI document: 2021-08-01
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// ItemOfferByMarketplace : Offer details of a listings item for an Amazon marketplace.
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct ItemOfferByMarketplace {
    /// The Amazon marketplace identifier.
    #[serde(rename = "marketplaceId")]
    pub marketplace_id: String,
    /// Type of offer for the listings item.
    #[serde(rename = "offerType")]
    pub offer_type: OfferType,
    #[serde(rename = "price")]
    pub price: Box<models::listings_items_2021_08_01::Money>,
    #[serde(rename = "points", skip_serializing_if = "Option::is_none")]
    pub points: Option<Box<models::listings_items_2021_08_01::Points>>,
    #[serde(rename = "audience", skip_serializing_if = "Option::is_none")]
    pub audience: Option<Box<models::listings_items_2021_08_01::Audience>>,
}

impl ItemOfferByMarketplace {
    /// Offer details of a listings item for an Amazon marketplace.
    pub fn new(marketplace_id: String, offer_type: OfferType, price: models::listings_items_2021_08_01::Money) -> ItemOfferByMarketplace {
        ItemOfferByMarketplace {
            marketplace_id,
            offer_type,
            price: Box::new(price),
            points: None,
            audience: None,
        }
    }
}
/// Type of offer for the listings item.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum OfferType {
    #[serde(rename = "B2C")]
    B2C,
    #[serde(rename = "B2B")]
    B2B,
}

impl Default for OfferType {
    fn default() -> OfferType {
        Self::B2C
    }
}

