/*
 * Selling Partner API for A+ Content Management
 *
 * Use the A+ Content API to build applications that help selling partners add rich marketing content to their Amazon product detail pages. Selling partners can use A+ content to share their brand and product story, which helps buyers make informed purchasing decisions. Selling partners use content modules to add images and text.
 *
 * The version of the OpenAPI document: 2020-11-01
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// AsinMetadata : The A+ Content ASIN with additional metadata for content management. If you don't include the `includedDataSet` parameter in a call to the `listContentDocumentAsinRelations` operation, the related ASINs are returned without metadata.
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct AsinMetadata {
    /// The Amazon Standard Identification Number (ASIN).
    #[serde(rename = "asin")]
    pub asin: String,
    /// The set of ASIN badges.
    #[serde(rename = "badgeSet", skip_serializing_if = "Option::is_none")]
    pub badge_set: Option<Vec<models::aplus_content_2020_11_01::AsinBadge>>,
    /// The Amazon Standard Identification Number (ASIN).
    #[serde(rename = "parent", skip_serializing_if = "Option::is_none")]
    pub parent: Option<String>,
    /// The title for the ASIN in the Amazon catalog.
    #[serde(rename = "title", skip_serializing_if = "Option::is_none")]
    pub title: Option<String>,
    /// The default image for the ASIN in the Amazon catalog.
    #[serde(rename = "imageUrl", skip_serializing_if = "Option::is_none")]
    pub image_url: Option<String>,
    /// A set of content reference keys.
    #[serde(rename = "contentReferenceKeySet", skip_serializing_if = "Option::is_none")]
    pub content_reference_key_set: Option<Vec<String>>,
}

impl AsinMetadata {
    /// The A+ Content ASIN with additional metadata for content management. If you don't include the `includedDataSet` parameter in a call to the `listContentDocumentAsinRelations` operation, the related ASINs are returned without metadata.
    pub fn new(asin: String) -> AsinMetadata {
        AsinMetadata {
            asin,
            badge_set: None,
            parent: None,
            title: None,
            image_url: None,
            content_reference_key_set: None,
        }
    }
}

