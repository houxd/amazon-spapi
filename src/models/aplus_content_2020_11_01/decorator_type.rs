/*
 * Selling Partner API for A+ Content Management
 *
 * Use the A+ Content API to build applications that help selling partners add rich marketing content to their Amazon product detail pages. Selling partners can use A+ content to share their brand and product story, which helps buyers make informed purchasing decisions. Selling partners use content modules to add images and text.
 *
 * The version of the OpenAPI document: 2020-11-01
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// DecoratorType : The type of rich text decorator.
/// The type of rich text decorator.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum DecoratorType {
    #[serde(rename = "LIST_ITEM")]
    ListItem,
    #[serde(rename = "LIST_ORDERED")]
    ListOrdered,
    #[serde(rename = "LIST_UNORDERED")]
    ListUnordered,
    #[serde(rename = "STYLE_BOLD")]
    StyleBold,
    #[serde(rename = "STYLE_ITALIC")]
    StyleItalic,
    #[serde(rename = "STYLE_LINEBREAK")]
    StyleLinebreak,
    #[serde(rename = "STYLE_PARAGRAPH")]
    StyleParagraph,
    #[serde(rename = "STYLE_UNDERLINE")]
    StyleUnderline,

}

impl std::fmt::Display for DecoratorType {
    fn fmt(&self, f: &mut std::fmt::Formatter) -> std::fmt::Result {
        match self {
            Self::ListItem => write!(f, "LIST_ITEM"),
            Self::ListOrdered => write!(f, "LIST_ORDERED"),
            Self::ListUnordered => write!(f, "LIST_UNORDERED"),
            Self::StyleBold => write!(f, "STYLE_BOLD"),
            Self::StyleItalic => write!(f, "STYLE_ITALIC"),
            Self::StyleLinebreak => write!(f, "STYLE_LINEBREAK"),
            Self::StyleParagraph => write!(f, "STYLE_PARAGRAPH"),
            Self::StyleUnderline => write!(f, "STYLE_UNDERLINE"),
        }
    }
}

impl Default for DecoratorType {
    fn default() -> DecoratorType {
        Self::ListItem
    }
}

