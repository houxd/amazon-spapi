/*
 * Selling Partner API for A+ Content Management
 *
 * Use the A+ Content API to build applications that help selling partners add rich marketing content to their Amazon product detail pages. Selling partners can use A+ content to share their brand and product story, which helps buyers make informed purchasing decisions. Selling partners use content modules to add images and text.
 *
 * The version of the OpenAPI document: 2020-11-01
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// ContentModuleType : The type of A+ Content module.
/// The type of A+ Content module.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum ContentModuleType {
    #[serde(rename = "STANDARD_COMPANY_LOGO")]
    StandardCompanyLogo,
    #[serde(rename = "STANDARD_COMPARISON_TABLE")]
    StandardComparisonTable,
    #[serde(rename = "STANDARD_FOUR_IMAGE_TEXT")]
    StandardFourImageText,
    #[serde(rename = "STANDARD_FOUR_IMAGE_TEXT_QUADRANT")]
    StandardFourImageTextQuadrant,
    #[serde(rename = "STANDARD_HEADER_IMAGE_TEXT")]
    StandardHeaderImageText,
    #[serde(rename = "STANDARD_IMAGE_SIDEBAR")]
    StandardImageSidebar,
    #[serde(rename = "STANDARD_IMAGE_TEXT_OVERLAY")]
    StandardImageTextOverlay,
    #[serde(rename = "STANDARD_MULTIPLE_IMAGE_TEXT")]
    StandardMultipleImageText,
    #[serde(rename = "STANDARD_PRODUCT_DESCRIPTION")]
    StandardProductDescription,
    #[serde(rename = "STANDARD_SINGLE_IMAGE_HIGHLIGHTS")]
    StandardSingleImageHighlights,
    #[serde(rename = "STANDARD_SINGLE_IMAGE_SPECS_DETAIL")]
    StandardSingleImageSpecsDetail,
    #[serde(rename = "STANDARD_SINGLE_SIDE_IMAGE")]
    StandardSingleSideImage,
    #[serde(rename = "STANDARD_TECH_SPECS")]
    StandardTechSpecs,
    #[serde(rename = "STANDARD_TEXT")]
    StandardText,
    #[serde(rename = "STANDARD_THREE_IMAGE_TEXT")]
    StandardThreeImageText,

}

impl std::fmt::Display for ContentModuleType {
    fn fmt(&self, f: &mut std::fmt::Formatter) -> std::fmt::Result {
        match self {
            Self::StandardCompanyLogo => write!(f, "STANDARD_COMPANY_LOGO"),
            Self::StandardComparisonTable => write!(f, "STANDARD_COMPARISON_TABLE"),
            Self::StandardFourImageText => write!(f, "STANDARD_FOUR_IMAGE_TEXT"),
            Self::StandardFourImageTextQuadrant => write!(f, "STANDARD_FOUR_IMAGE_TEXT_QUADRANT"),
            Self::StandardHeaderImageText => write!(f, "STANDARD_HEADER_IMAGE_TEXT"),
            Self::StandardImageSidebar => write!(f, "STANDARD_IMAGE_SIDEBAR"),
            Self::StandardImageTextOverlay => write!(f, "STANDARD_IMAGE_TEXT_OVERLAY"),
            Self::StandardMultipleImageText => write!(f, "STANDARD_MULTIPLE_IMAGE_TEXT"),
            Self::StandardProductDescription => write!(f, "STANDARD_PRODUCT_DESCRIPTION"),
            Self::StandardSingleImageHighlights => write!(f, "STANDARD_SINGLE_IMAGE_HIGHLIGHTS"),
            Self::StandardSingleImageSpecsDetail => write!(f, "STANDARD_SINGLE_IMAGE_SPECS_DETAIL"),
            Self::StandardSingleSideImage => write!(f, "STANDARD_SINGLE_SIDE_IMAGE"),
            Self::StandardTechSpecs => write!(f, "STANDARD_TECH_SPECS"),
            Self::StandardText => write!(f, "STANDARD_TEXT"),
            Self::StandardThreeImageText => write!(f, "STANDARD_THREE_IMAGE_TEXT"),
        }
    }
}

impl Default for ContentModuleType {
    fn default() -> ContentModuleType {
        Self::StandardCompanyLogo
    }
}

