/*
 * Selling Partner APIs for Fulfillment Outbound
 *
 * The Selling Partner API for Fulfillment Outbound lets you create applications that help a seller fulfill Multi-Channel Fulfillment orders using their inventory in Amazon's fulfillment network. You can get information on both potential and existing fulfillment orders.
 *
 * The version of the OpenAPI document: 2020-07-01
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// Amount : A quantity based on unit of measure.
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct Amount {
    /// The unit of measure for the amount.
    #[serde(rename = "unitOfMeasure")]
    pub unit_of_measure: UnitOfMeasure,
    /// A decimal number with no loss of precision. Useful when precision loss is unacceptable, as with currencies. Follows RFC7159 for number representation.
    #[serde(rename = "value")]
    pub value: String,
}

impl Amount {
    /// A quantity based on unit of measure.
    pub fn new(unit_of_measure: UnitOfMeasure, value: String) -> Amount {
        Amount {
            unit_of_measure,
            value,
        }
    }
}
/// The unit of measure for the amount.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum UnitOfMeasure {
    #[serde(rename = "Eaches")]
    Eaches,
}

impl Default for UnitOfMeasure {
    fn default() -> UnitOfMeasure {
        Self::Eaches
    }
}

