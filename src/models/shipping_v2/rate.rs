/*
 * Amazon Shipping API
 *
 * The Amazon Shipping API is designed to support outbound shipping use cases both for orders originating on Amazon-owned marketplaces as well as external channels/marketplaces. With these APIs, you can request shipping rates, create shipments, cancel shipments, and track shipments.
 *
 * The version of the OpenAPI document: v2
 * Contact: swa-api-core@amazon.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// Rate : The details of a shipping service offering.
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct Rate {
    /// An identifier for the rate (shipment offering) provided by a shipping service provider.
    #[serde(rename = "rateId")]
    pub rate_id: String,
    /// The carrier identifier for the offering, provided by the carrier.
    #[serde(rename = "carrierId")]
    pub carrier_id: String,
    /// The carrier name for the offering.
    #[serde(rename = "carrierName")]
    pub carrier_name: String,
    /// An identifier for the shipping service.
    #[serde(rename = "serviceId")]
    pub service_id: String,
    /// The name of the shipping service.
    #[serde(rename = "serviceName")]
    pub service_name: String,
    #[serde(rename = "billedWeight", skip_serializing_if = "Option::is_none")]
    pub billed_weight: Option<Box<models::shipping_v2::Weight>>,
    #[serde(rename = "totalCharge")]
    pub total_charge: Box<models::shipping_v2::Currency>,
    #[serde(rename = "promise")]
    pub promise: Box<models::shipping_v2::Promise>,
    /// A list of the document specifications supported for a shipment service offering.
    #[serde(rename = "supportedDocumentSpecifications")]
    pub supported_document_specifications: Vec<models::shipping_v2::SupportedDocumentSpecification>,
    /// A list of value-added services available for a shipping service offering.
    #[serde(rename = "availableValueAddedServiceGroups", skip_serializing_if = "Option::is_none")]
    pub available_value_added_service_groups: Option<Vec<models::shipping_v2::AvailableValueAddedServiceGroup>>,
    /// When true, indicates that additional inputs are required to purchase this shipment service. You must then call the getAdditionalInputs operation to return the JSON schema to use when providing the additional inputs to the purchaseShipment operation.
    #[serde(rename = "requiresAdditionalInputs")]
    pub requires_additional_inputs: bool,
    /// A list of RateItem
    #[serde(rename = "rateItemList", skip_serializing_if = "Option::is_none")]
    pub rate_item_list: Option<Vec<models::shipping_v2::RateItem>>,
    #[serde(rename = "paymentType", skip_serializing_if = "Option::is_none")]
    pub payment_type: Option<models::shipping_v2::PaymentType>,
    #[serde(rename = "benefits", skip_serializing_if = "Option::is_none")]
    pub benefits: Option<Box<models::shipping_v2::Benefits>>,
}

impl Rate {
    /// The details of a shipping service offering.
    pub fn new(rate_id: String, carrier_id: String, carrier_name: String, service_id: String, service_name: String, total_charge: models::shipping_v2::Currency, promise: models::shipping_v2::Promise, supported_document_specifications: Vec<models::shipping_v2::SupportedDocumentSpecification>, requires_additional_inputs: bool) -> Rate {
        Rate {
            rate_id,
            carrier_id,
            carrier_name,
            service_id,
            service_name,
            billed_weight: None,
            total_charge: Box::new(total_charge),
            promise: Box::new(promise),
            supported_document_specifications,
            available_value_added_service_groups: None,
            requires_additional_inputs,
            rate_item_list: None,
            payment_type: None,
            benefits: None,
        }
    }
}

