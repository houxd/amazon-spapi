/*
 * Amazon Shipping API
 *
 * The Amazon Shipping API is designed to support outbound shipping use cases both for orders originating on Amazon-owned marketplaces as well as external channels/marketplaces. With these APIs, you can request shipping rates, create shipments, cancel shipments, and track shipments.
 *
 * The version of the OpenAPI document: v2
 * Contact: swa-api-core@amazon.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// DirectPurchaseRequest : The request schema for the directPurchaseShipment operation. When the channel type is Amazon, the shipTo address is not required and will be ignored.
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct DirectPurchaseRequest {
    #[serde(rename = "shipTo", skip_serializing_if = "Option::is_none")]
    pub ship_to: Option<Box<models::shipping_v2::Address>>,
    #[serde(rename = "shipFrom", skip_serializing_if = "Option::is_none")]
    pub ship_from: Option<Box<models::shipping_v2::Address>>,
    #[serde(rename = "returnTo", skip_serializing_if = "Option::is_none")]
    pub return_to: Option<Box<models::shipping_v2::Address>>,
    /// A list of packages to be shipped through a shipping service offering.
    #[serde(rename = "packages", skip_serializing_if = "Option::is_none")]
    pub packages: Option<Vec<models::shipping_v2::Package>>,
    #[serde(rename = "channelDetails")]
    pub channel_details: Box<models::shipping_v2::ChannelDetails>,
    #[serde(rename = "labelSpecifications", skip_serializing_if = "Option::is_none")]
    pub label_specifications: Option<Box<models::shipping_v2::RequestedDocumentSpecification>>,
}

impl DirectPurchaseRequest {
    /// The request schema for the directPurchaseShipment operation. When the channel type is Amazon, the shipTo address is not required and will be ignored.
    pub fn new(channel_details: models::shipping_v2::ChannelDetails) -> DirectPurchaseRequest {
        DirectPurchaseRequest {
            ship_to: None,
            ship_from: None,
            return_to: None,
            packages: None,
            channel_details: Box::new(channel_details),
            label_specifications: None,
        }
    }
}

