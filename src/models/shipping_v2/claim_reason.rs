/*
 * Amazon Shipping API
 *
 * The Amazon Shipping API is designed to support outbound shipping use cases both for orders originating on Amazon-owned marketplaces as well as external channels/marketplaces. With these APIs, you can request shipping rates, create shipments, cancel shipments, and track shipments.
 *
 * The version of the OpenAPI document: v2
 * Contact: swa-api-core@amazon.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// ClaimReason : The reason for which shipper is filing the claim for a particular shipment.
/// The reason for which shipper is filing the claim for a particular shipment.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum ClaimReason {
    #[serde(rename = "LOST_IN_TRANSIT")]
    LostInTransit,
    #[serde(rename = "DAMAGED_IN_TRANSIT")]
    DamagedInTransit,
    #[serde(rename = "DELIVERED_NOT_RECEIVED")]
    DeliveredNotReceived,
    #[serde(rename = "ITEM_MISSING_SWITCHEROO")]
    ItemMissingSwitcheroo,
    #[serde(rename = "COD_ABUSE")]
    CodAbuse,

}

impl std::fmt::Display for ClaimReason {
    fn fmt(&self, f: &mut std::fmt::Formatter) -> std::fmt::Result {
        match self {
            Self::LostInTransit => write!(f, "LOST_IN_TRANSIT"),
            Self::DamagedInTransit => write!(f, "DAMAGED_IN_TRANSIT"),
            Self::DeliveredNotReceived => write!(f, "DELIVERED_NOT_RECEIVED"),
            Self::ItemMissingSwitcheroo => write!(f, "ITEM_MISSING_SWITCHEROO"),
            Self::CodAbuse => write!(f, "COD_ABUSE"),
        }
    }
}

impl Default for ClaimReason {
    fn default() -> ClaimReason {
        Self::LostInTransit
    }
}

