/*
 * Amazon Shipping API
 *
 * The Amazon Shipping API is designed to support outbound shipping use cases both for orders originating on Amazon-owned marketplaces as well as external channels/marketplaces. With these APIs, you can request shipping rates, create shipments, cancel shipments, and track shipments.
 *
 * The version of the OpenAPI document: v2
 * Contact: swa-api-core@amazon.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// GetTrackingResult : The payload for the getTracking operation.
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct GetTrackingResult {
    /// The carrier generated identifier for a package in a purchased shipment.
    #[serde(rename = "trackingId")]
    pub tracking_id: String,
    /// The carrier generated reverse identifier for a returned package in a purchased shipment.
    #[serde(rename = "alternateLegTrackingId")]
    pub alternate_leg_tracking_id: String,
    /// A list of tracking events.
    #[serde(rename = "eventHistory")]
    pub event_history: Vec<models::shipping_v2::Event>,
    /// The date and time by which the shipment is promised to be delivered.
    #[serde(rename = "promisedDeliveryDate")]
    pub promised_delivery_date: String,
    #[serde(rename = "summary")]
    pub summary: Box<models::shipping_v2::TrackingSummary>,
}

impl GetTrackingResult {
    /// The payload for the getTracking operation.
    pub fn new(tracking_id: String, alternate_leg_tracking_id: String, event_history: Vec<models::shipping_v2::Event>, promised_delivery_date: String, summary: models::shipping_v2::TrackingSummary) -> GetTrackingResult {
        GetTrackingResult {
            tracking_id,
            alternate_leg_tracking_id,
            event_history,
            promised_delivery_date,
            summary: Box::new(summary),
        }
    }
}

