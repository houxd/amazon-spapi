/*
 * Amazon Shipping API
 *
 * The Amazon Shipping API is designed to support outbound shipping use cases both for orders originating on Amazon-owned marketplaces as well as external channels/marketplaces. With these APIs, you can request shipping rates, create shipments, cancel shipments, and track shipments.
 *
 * The version of the OpenAPI document: v2
 * Contact: swa-api-core@amazon.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// AccessPointType : The type of access point, like counter (HELIX), lockers, etc.
/// The type of access point, like counter (HELIX), lockers, etc.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum AccessPointType {
    #[serde(rename = "HELIX")]
    Helix,
    #[serde(rename = "CAMPUS_LOCKER")]
    CampusLocker,
    #[serde(rename = "OMNI_LOCKER")]
    OmniLocker,
    #[serde(rename = "ODIN_LOCKER")]
    OdinLocker,
    #[serde(rename = "DOBBY_LOCKER")]
    DobbyLocker,
    #[serde(rename = "CORE_LOCKER")]
    CoreLocker,
    #[serde(rename = "3P")]
    Variant3P,
    #[serde(rename = "CAMPUS_ROOM")]
    CampusRoom,

}

impl std::fmt::Display for AccessPointType {
    fn fmt(&self, f: &mut std::fmt::Formatter) -> std::fmt::Result {
        match self {
            Self::Helix => write!(f, "HELIX"),
            Self::CampusLocker => write!(f, "CAMPUS_LOCKER"),
            Self::OmniLocker => write!(f, "OMNI_LOCKER"),
            Self::OdinLocker => write!(f, "ODIN_LOCKER"),
            Self::DobbyLocker => write!(f, "DOBBY_LOCKER"),
            Self::CoreLocker => write!(f, "CORE_LOCKER"),
            Self::Variant3P => write!(f, "3P"),
            Self::CampusRoom => write!(f, "CAMPUS_ROOM"),
        }
    }
}

impl Default for AccessPointType {
    fn default() -> AccessPointType {
        Self::Helix
    }
}

