/*
 * Selling Partner API for Services
 *
 * With the Services API, you can build applications that help service providers get and modify their service orders and manage their resources.
 *
 * The version of the OpenAPI document: v1
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// SetAppointmentFulfillmentDataRequest : Input for set appointment fulfillment data operation.
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct SetAppointmentFulfillmentDataRequest {
    #[serde(rename = "estimatedArrivalTime", skip_serializing_if = "Option::is_none")]
    pub estimated_arrival_time: Option<Box<models::services::DateTimeRange>>,
    #[serde(rename = "fulfillmentTime", skip_serializing_if = "Option::is_none")]
    pub fulfillment_time: Option<Box<models::services::FulfillmentTime>>,
    /// List of resources that performs or performed job appointment fulfillment.
    #[serde(rename = "appointmentResources", skip_serializing_if = "Option::is_none")]
    pub appointment_resources: Option<Vec<models::services::AppointmentResource>>,
    /// List of documents captured during service appointment fulfillment.
    #[serde(rename = "fulfillmentDocuments", skip_serializing_if = "Option::is_none")]
    pub fulfillment_documents: Option<Vec<models::services::FulfillmentDocument>>,
}

impl SetAppointmentFulfillmentDataRequest {
    /// Input for set appointment fulfillment data operation.
    pub fn new() -> SetAppointmentFulfillmentDataRequest {
        SetAppointmentFulfillmentDataRequest {
            estimated_arrival_time: None,
            fulfillment_time: None,
            appointment_resources: None,
            fulfillment_documents: None,
        }
    }
}

