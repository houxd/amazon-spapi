/*
 * Selling Partner API for Catalog Items
 *
 * The Selling Partner API for Catalog Items provides programmatic access to information about items in the Amazon catalog.  For more information, see the [Catalog Items API Use Case Guide](doc:catalog-items-api-v2020-12-01-use-case-guide).
 *
 * The version of the OpenAPI document: 2020-12-01
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// ItemVariationsByMarketplace : Variation details for the Amazon catalog item for the indicated Amazon marketplace.
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct ItemVariationsByMarketplace {
    /// Amazon marketplace identifier.
    #[serde(rename = "marketplaceId")]
    pub marketplace_id: String,
    /// Identifiers (ASINs) of the related items.
    #[serde(rename = "asins")]
    pub asins: Vec<String>,
    /// Type of variation relationship of the Amazon catalog item in the request to the related item(s): \"PARENT\" or \"CHILD\".
    #[serde(rename = "variationType")]
    pub variation_type: VariationType,
}

impl ItemVariationsByMarketplace {
    /// Variation details for the Amazon catalog item for the indicated Amazon marketplace.
    pub fn new(marketplace_id: String, asins: Vec<String>, variation_type: VariationType) -> ItemVariationsByMarketplace {
        ItemVariationsByMarketplace {
            marketplace_id,
            asins,
            variation_type,
        }
    }
}
/// Type of variation relationship of the Amazon catalog item in the request to the related item(s): \"PARENT\" or \"CHILD\".
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum VariationType {
    #[serde(rename = "PARENT")]
    Parent,
    #[serde(rename = "CHILD")]
    Child,
}

impl Default for VariationType {
    fn default() -> VariationType {
        Self::Parent
    }
}

