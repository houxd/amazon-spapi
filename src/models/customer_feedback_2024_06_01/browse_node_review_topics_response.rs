/*
 * The Selling Partner API for CustomerFeedback
 *
 * The Selling Partner API for Customer Feedback (Customer Feedback API) provides information about customer reviews and returns at both the item and browse node level.
 *
 * The version of the OpenAPI document: 2024-06-01
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// BrowseNodeReviewTopicsResponse : The response for the `getBrowseNodeReviewTopics` operation.
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct BrowseNodeReviewTopicsResponse {
    /// The requested browse node id. A browse node id is the unique identifier of a given browse node.
    #[serde(rename = "browseNodeId")]
    pub browse_node_id: String,
    /// The display name of the requested browse node id. The display name of the browse node as visible on the Amazon retail website.
    #[serde(rename = "displayName")]
    pub display_name: String,
    /// The requested marketplace id.
    #[serde(rename = "marketplaceId")]
    pub marketplace_id: String,
    /// The two digit country code of requested marketplace id, in ISO 3166-1 alpha-2 format.
    #[serde(rename = "countryCode")]
    pub country_code: String,
    #[serde(rename = "dateRange")]
    pub date_range: Box<models::customer_feedback_2024_06_01::DateRange>,
    #[serde(rename = "topics")]
    pub topics: Box<models::customer_feedback_2024_06_01::BrowseNodeReviewTopics>,
}

impl BrowseNodeReviewTopicsResponse {
    /// The response for the `getBrowseNodeReviewTopics` operation.
    pub fn new(browse_node_id: String, display_name: String, marketplace_id: String, country_code: String, date_range: models::customer_feedback_2024_06_01::DateRange, topics: models::customer_feedback_2024_06_01::BrowseNodeReviewTopics) -> BrowseNodeReviewTopicsResponse {
        BrowseNodeReviewTopicsResponse {
            browse_node_id,
            display_name,
            marketplace_id,
            country_code,
            date_range: Box::new(date_range),
            topics: Box::new(topics),
        }
    }
}

