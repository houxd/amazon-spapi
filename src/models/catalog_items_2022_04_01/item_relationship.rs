/*
 * Selling Partner API for Catalog Items
 *
 * Use the Selling Partner API for Catalog Items to retrieve information about items in the Amazon catalog.  For more information, refer to the [Catalog Items API Use Case Guide](https://developer-docs.amazon.com/sp-api/docs/:catalog-items-api-v2022-04-01-use-case-guide).
 *
 * The version of the OpenAPI document: 2022-04-01
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// ItemRelationship : Relationship details for an Amazon catalog item.
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct ItemRelationship {
    /// ASINs of the related items that are children of this item.
    #[serde(rename = "childAsins", skip_serializing_if = "Option::is_none")]
    pub child_asins: Option<Vec<String>>,
    /// ASINs of the related items that are parents of this item.
    #[serde(rename = "parentAsins", skip_serializing_if = "Option::is_none")]
    pub parent_asins: Option<Vec<String>>,
    #[serde(rename = "variationTheme", skip_serializing_if = "Option::is_none")]
    pub variation_theme: Option<Box<models::catalog_items_2022_04_01::ItemVariationTheme>>,
    /// Type of relationship.
    #[serde(rename = "type")]
    pub r#type: Type,
}

impl ItemRelationship {
    /// Relationship details for an Amazon catalog item.
    pub fn new(r#type: Type) -> ItemRelationship {
        ItemRelationship {
            child_asins: None,
            parent_asins: None,
            variation_theme: None,
            r#type,
        }
    }
}
/// Type of relationship.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Type {
    #[serde(rename = "VARIATION")]
    Variation,
    #[serde(rename = "PACKAGE_HIERARCHY")]
    PackageHierarchy,
}

impl Default for Type {
    fn default() -> Type {
        Self::Variation
    }
}

