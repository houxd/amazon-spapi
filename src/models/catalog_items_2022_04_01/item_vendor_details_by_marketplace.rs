/*
 * Selling Partner API for Catalog Items
 *
 * Use the Selling Partner API for Catalog Items to retrieve information about items in the Amazon catalog.  For more information, refer to the [Catalog Items API Use Case Guide](https://developer-docs.amazon.com/sp-api/docs/:catalog-items-api-v2022-04-01-use-case-guide).
 *
 * The version of the OpenAPI document: 2022-04-01
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// ItemVendorDetailsByMarketplace : The vendor details that are associated with an Amazon catalog item for the specified `marketplaceId`.
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct ItemVendorDetailsByMarketplace {
    /// Amazon marketplace identifier. To find the ID for your marketplace, refer to [Marketplace IDs](https://developer-docs.amazon.com/sp-api/docs/marketplace-ids).
    #[serde(rename = "marketplaceId")]
    pub marketplace_id: String,
    /// The brand code that is associated with an Amazon catalog item.
    #[serde(rename = "brandCode", skip_serializing_if = "Option::is_none")]
    pub brand_code: Option<String>,
    /// The manufacturer code that is associated with an Amazon catalog item.
    #[serde(rename = "manufacturerCode", skip_serializing_if = "Option::is_none")]
    pub manufacturer_code: Option<String>,
    /// The parent vendor code of the manufacturer code.
    #[serde(rename = "manufacturerCodeParent", skip_serializing_if = "Option::is_none")]
    pub manufacturer_code_parent: Option<String>,
    #[serde(rename = "productCategory", skip_serializing_if = "Option::is_none")]
    pub product_category: Option<Box<models::catalog_items_2022_04_01::ItemVendorDetailsCategory>>,
    /// The product group that is associated with an Amazon catalog item.
    #[serde(rename = "productGroup", skip_serializing_if = "Option::is_none")]
    pub product_group: Option<String>,
    #[serde(rename = "productSubcategory", skip_serializing_if = "Option::is_none")]
    pub product_subcategory: Option<Box<models::catalog_items_2022_04_01::ItemVendorDetailsCategory>>,
    /// The replenishment category that is associated with an Amazon catalog item.
    #[serde(rename = "replenishmentCategory", skip_serializing_if = "Option::is_none")]
    pub replenishment_category: Option<ReplenishmentCategory>,
}

impl ItemVendorDetailsByMarketplace {
    /// The vendor details that are associated with an Amazon catalog item for the specified `marketplaceId`.
    pub fn new(marketplace_id: String) -> ItemVendorDetailsByMarketplace {
        ItemVendorDetailsByMarketplace {
            marketplace_id,
            brand_code: None,
            manufacturer_code: None,
            manufacturer_code_parent: None,
            product_category: None,
            product_group: None,
            product_subcategory: None,
            replenishment_category: None,
        }
    }
}
/// The replenishment category that is associated with an Amazon catalog item.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum ReplenishmentCategory {
    #[serde(rename = "ALLOCATED")]
    Allocated,
    #[serde(rename = "BASIC_REPLENISHMENT")]
    BasicReplenishment,
    #[serde(rename = "IN_SEASON")]
    InSeason,
    #[serde(rename = "LIMITED_REPLENISHMENT")]
    LimitedReplenishment,
    #[serde(rename = "MANUFACTURER_OUT_OF_STOCK")]
    ManufacturerOutOfStock,
    #[serde(rename = "NEW_PRODUCT")]
    NewProduct,
    #[serde(rename = "NON_REPLENISHABLE")]
    NonReplenishable,
    #[serde(rename = "NON_STOCKUPABLE")]
    NonStockupable,
    #[serde(rename = "OBSOLETE")]
    Obsolete,
    #[serde(rename = "PLANNED_REPLENISHMENT")]
    PlannedReplenishment,
}

impl Default for ReplenishmentCategory {
    fn default() -> ReplenishmentCategory {
        Self::Allocated
    }
}

