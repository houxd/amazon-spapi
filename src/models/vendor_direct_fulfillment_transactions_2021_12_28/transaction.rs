/*
 * Selling Partner API for Direct Fulfillment Transaction Status
 *
 * The Selling Partner API for Direct Fulfillment Transaction Status provides programmatic access to a direct fulfillment vendor's transaction status.
 *
 * The version of the OpenAPI document: 2021-12-28
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// Transaction : The transaction status details.
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct Transaction {
    /// The unique identifier sent in the 'transactionId' field in response to the post request of a specific transaction.
    #[serde(rename = "transactionId")]
    pub transaction_id: String,
    /// Current processing status of the transaction.
    #[serde(rename = "status")]
    pub status: Status,
    #[serde(rename = "errors", skip_serializing_if = "Option::is_none")]
    pub errors: Option<Box<models::vendor_direct_fulfillment_transactions_2021_12_28::ErrorList>>,
}

impl Transaction {
    /// The transaction status details.
    pub fn new(transaction_id: String, status: Status) -> Transaction {
        Transaction {
            transaction_id,
            status,
            errors: None,
        }
    }
}
/// Current processing status of the transaction.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Status {
    #[serde(rename = "Failure")]
    Failure,
    #[serde(rename = "Processing")]
    Processing,
    #[serde(rename = "Success")]
    Success,
}

impl Default for Status {
    fn default() -> Status {
        Self::Failure
    }
}

